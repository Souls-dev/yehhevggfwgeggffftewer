local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

if game:GetService("CoreGui"):FindFirstChild("SOULS_HUB") then
    game:GetService("CoreGui").SOULS_HUB:Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SOULS_HUB"
screenGui.Parent = game:GetService("CoreGui")

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 700, 0, 380)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.ZIndex = 1
mainFrame.Visible = false
mainFrame.Parent = screenGui

local outline = Instance.new("UIStroke")
outline.Color = Color3.new(1, 1, 1)
outline.Thickness = 2
outline.Transparency = 0.1
outline.Parent = mainFrame

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 16)
corner.Parent = mainFrame

local gradient = Instance.new("UIGradient")
gradient.Rotation = 90
gradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0.6),
    NumberSequenceKeypoint.new(1, 0.8)
})
gradient.Parent = mainFrame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleButton"
toggleBtn.Size = UDim2.new(0, 140, 0, 40)
toggleBtn.Position = UDim2.new(0.5, -70, 0, 20)
toggleBtn.AnchorPoint = Vector2.new(0.5, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleBtn.BackgroundTransparency = 0.3
toggleBtn.Text = "TOGGLE MENU"
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 14
toggleBtn.Visible = false
toggleBtn.ZIndex = 10
toggleBtn.Parent = screenGui

local toggleTextOutline = Instance.new("UIStroke")
toggleTextOutline.Color = Color3.new(0, 0, 0)
toggleTextOutline.Thickness = 1
toggleTextOutline.Transparency = 0
toggleTextOutline.Parent = toggleBtn

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 12)
toggleCorner.Parent = toggleBtn

local toggleOutline = Instance.new("UIStroke")
toggleOutline.Color = Color3.new(1, 1, 1)
toggleOutline.Thickness = 1
toggleOutline.Transparency = 0.2
toggleOutline.Parent = toggleBtn

local function makeDraggable(frame)
    local dragging = false
    local dragInput, dragStart, startPos

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)

    frame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
            dragInput = nil
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            dragInput = input
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end
makeDraggable(mainFrame)
makeDraggable(toggleBtn)

local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseButton"
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 10)
closeBtn.AnchorPoint = Vector2.new(1, 0)
closeBtn.BackgroundTransparency = 1
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextSize = 20
closeBtn.Font = Enum.Font.GothamBold
closeBtn.ZIndex = 3
closeBtn.Parent = mainFrame

local closeTextOutline = Instance.new("UIStroke")
closeTextOutline.Color = Color3.new(0, 0, 0)
closeTextOutline.Thickness = 1
closeTextOutline.Transparency = 0
closeTextOutline.Parent = closeBtn

local titleFont = Enum.Font.GothamBold
local titleText = Instance.new("TextLabel")
titleText.Name = "Title"
titleText.Size = UDim2.new(0, 200, 0, 30)
titleText.Position = UDim2.new(0, 20, 0, 10)
titleText.BackgroundTransparency = 1
titleText.Text = "SOULS HUB"
titleText.TextColor3 = Color3.new(1, 1, 1)
titleText.TextSize = 24
titleText.Font = titleFont
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.ZIndex = 2
titleText.Parent = mainFrame

local titleTextOutline = Instance.new("UIStroke")
titleTextOutline.Color = Color3.new(0, 0, 0)
titleTextOutline.Thickness = 1
titleTextOutline.Transparency = 0
titleTextOutline.Parent = titleText

local titleGlow = Instance.new("UIGradient")
titleGlow.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
    ColorSequenceKeypoint.new(0.5, Color3.new(0.85, 0.85, 0.85)),
    ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
})
titleGlow.Rotation = -45
titleGlow.Transparency = NumberSequence.new(0.6)
titleGlow.Parent = titleText

local topSeparator = Instance.new("Frame")
topSeparator.Name = "TopSeparator"
topSeparator.Size = UDim2.new(1, -40, 0, 1)
topSeparator.Position = UDim2.new(0, 20, 0, 50)
topSeparator.BackgroundColor3 = Color3.new(1, 1, 1)
topSeparator.BorderSizePixel = 0
topSeparator.ZIndex = 2
topSeparator.Parent = mainFrame

local verticalSeparator = Instance.new("Frame")
verticalSeparator.Name = "VerticalSeparator"
verticalSeparator.Size = UDim2.new(0, 1, 1, -120)
verticalSeparator.Position = UDim2.new(0, 170, 0, 70)
verticalSeparator.BackgroundColor3 = Color3.new(1, 1, 1)
verticalSeparator.BorderSizePixel = 0
verticalSeparator.ZIndex = 2
verticalSeparator.Parent = mainFrame

local tabContainer = Instance.new("Frame")
tabContainer.Name = "Tabs"
tabContainer.Size = UDim2.new(0, 150, 0, 280)
tabContainer.Position = UDim2.new(0, 15, 0, 70)
tabContainer.BackgroundTransparency = 1
tabContainer.ZIndex = 2
tabContainer.Parent = mainFrame

local contentContainer = Instance.new("Frame")
contentContainer.Name = "Content"
contentContainer.Size = UDim2.new(0, 500, 0, 280)
contentContainer.Position = UDim2.new(1, -515, 0, 70)
contentContainer.BackgroundTransparency = 1
contentContainer.ZIndex = 2
contentContainer.Parent = mainFrame

local function createTab(tabName)
    local tab = Instance.new("TextButton")
    tab.Name = tabName
    tab.Size = UDim2.new(0, 140, 0, 30)
    tab.Position = UDim2.new(0, 0, 0, #tabContainer:GetChildren() * 35)
    tab.BackgroundTransparency = 1
    tab.Text = tabName
    tab.TextColor3 = Color3.new(1, 1, 1)
    tab.TextSize = 18
    tab.Font = Enum.Font.GothamBold
    tab.TextTransparency = 0.5
    tab.ZIndex = 3

    local tabTextOutline = Instance.new("UIStroke")
    tabTextOutline.Color = Color3.new(0, 0, 0)
    tabTextOutline.Thickness = 1
    tabTextOutline.Transparency = 0.5
    tabTextOutline.Parent = tab

    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.5
    outline.Parent = tab

    local content = Instance.new("ScrollingFrame")
    content.Name = tabName.."Content"
    content.Size = UDim2.new(1, 0, 1, 0)
    content.BackgroundTransparency = 1
    content.Visible = false
    content.ScrollBarThickness = 5
    content.AutomaticCanvasSize = Enum.AutomaticSize.Y
    content.Parent = contentContainer

    tab.MouseButton1Click:Connect(function()
        switchTab(tabName)
    end)

    tab.Parent = tabContainer
    return tab, content
end

local mainTab, mainContent = createTab("MAIN FEATURES")
local espTab, espContent = createTab("ESP")
local miscTab, miscContent = createTab("MISC")

local function addCategory(parent, text)
    local category = Instance.new("TextLabel")
    category.Name = text.."Category"
    category.Size = UDim2.new(0, 200, 0, 20)
    category.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    category.BackgroundTransparency = 1
    category.Text = text
    category.TextColor3 = Color3.new(1, 1, 1)
    category.TextSize = 16
    category.Font = titleFont
    category.TextXAlignment = Enum.TextXAlignment.Left
    category.ZIndex = 3

    local categoryTextOutline = Instance.new("UIStroke")
    categoryTextOutline.Color = Color3.new(0, 0, 0)
    categoryTextOutline.Thickness = 1
    categoryTextOutline.Transparency = 0
    categoryTextOutline.Parent = category

    category.Parent = parent
end

local function createButton(parent, buttonText, func)
    local button = Instance.new("TextButton")
    button.Name = buttonText
    button.Size = UDim2.new(0, 200, 0, 40)
    button.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    button.BackgroundTransparency = 1
    button.Text = buttonText
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 14
    button.ZIndex = 3

    local buttonTextOutline = Instance.new("UIStroke")
    buttonTextOutline.Color = Color3.new(0, 0, 0)
    buttonTextOutline.Thickness = 1
    buttonTextOutline.Transparency = 0.3
    buttonTextOutline.Parent = button

    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.3
    outline.Parent = button

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button

    button.MouseButton1Click:Connect(function()
        if func then func() end
    end)

    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.85,
            TextColor3 = Color3.new(0.9, 0.9, 0.9)
        }):Play()
    end)

    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundTransparency = 1,
            TextColor3 = Color3.new(1, 1, 1)
        }):Play()
    end)

    button.Parent = parent
    return button
end

local function createToggle(parent, defaultText, onText, offText, onFunction, offFunction)
    local toggleEnabled = false
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 200, 0, 40)
    toggleButton.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Text = defaultText or "TOGGLE"
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.TextSize = 14
    toggleButton.ZIndex = 3

    local toggleTextOutline = Instance.new("UIStroke")
    toggleTextOutline.Color = Color3.new(0, 0, 0)
    toggleTextOutline.Thickness = 1
    toggleTextOutline.Transparency = 0.3
    toggleTextOutline.Parent = toggleButton

    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.3
    outline.Parent = toggleButton

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = toggleButton

    toggleButton.MouseEnter:Connect(function()
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.85,
            TextColor3 = Color3.new(0.9, 0.9, 0.9)
        }):Play()
    end)

    toggleButton.MouseLeave:Connect(function()
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {
            BackgroundTransparency = 1,
            TextColor3 = Color3.new(1, 1, 1)
        }):Play()
    end)

    toggleButton.MouseButton1Down:Connect(function()
        game:GetService("TweenService"):Create(
            toggleButton,
            TweenInfo.new(0.1),
            {Size = UDim2.new(0, 190, 0, 38)}
        ):Play()
    end)

    toggleButton.MouseButton1Up:Connect(function()
        game:GetService("TweenService"):Create(
            toggleButton,
            TweenInfo.new(0.2),
            {Size = UDim2.new(0, 200, 0, 40)}
        ):Play()
    end)

    toggleButton.MouseButton1Click:Connect(function()
        toggleEnabled = not toggleEnabled

        if toggleEnabled then
            toggleButton.Text = onText or "ON"
            if onFunction then onFunction() end
        else
            toggleButton.Text = offText or "OFF"
            if offFunction then offFunction() end
        end
    end)

    toggleButton.Parent = parent
    return toggleButton
end

local function switchTab(tabName)
    for _, tabInstance in ipairs(tabContainer:GetChildren()) do
        if tabInstance:IsA("TextButton") then
            tabInstance.TextTransparency = 0.5
            local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
            if tabStroke then
                tabStroke.Transparency = 0.5
            end
        end
    end
    for _, content in ipairs(contentContainer:GetChildren()) do
        if content:IsA("ScrollingFrame") then
            content.Visible = false
        end
    end

    local selectedTab = tabContainer:FindFirstChild(tabName)
    if selectedTab then
        selectedTab.TextTransparency = 0
        local selectedTabStroke = selectedTab:FindFirstChildOfClass("UIStroke")
        if selectedTabStroke then
            selectedTabStroke.Transparency = 0
        end
    end
    local selectedContent = contentContainer:FindFirstChild(tabName.."Content")
    if selectedContent then
        selectedContent.Visible = true
    end
end

local function toggleUI(visible)
    mainFrame.Visible = visible
    toggleBtn.Visible = not visible
    if visible then
        mainFrame:TweenSize(UDim2.new(0, 700, 0, 380), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.3)
    end
end

closeBtn.MouseButton1Click:Connect(function()
    toggleUI(false)
    toggleBtn.Visible = true
end)

toggleBtn.MouseButton1Click:Connect(function()
    toggleUI(true)
    toggleBtn.Visible = false
end)

local function openAnimation()
    toggleBtn.Visible = false
    mainFrame.Visible = true
    mainFrame.Size = UDim2.new(0, 700, 0, 2)
    mainFrame.BackgroundTransparency = 1
    titleText.TextTransparency = 1
    closeBtn.TextTransparency = 1
    topSeparator.Transparency = 1
    verticalSeparator.Transparency = 1

    for _, tabInstance in ipairs(tabContainer:GetChildren()) do
        if tabInstance:IsA("TextButton") then
            tabInstance.TextTransparency = 1
            local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
            if tabStroke then
                tabStroke.Transparency = 1
            end
        end
    end

    mainFrame:TweenSize(UDim2.new(0, 700, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.5, true, function()
        mainFrame:TweenSize(UDim2.new(0, 700, 0, 380), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.7)
        for i = 1, 0, -0.05 do
            mainFrame.BackgroundTransparency = i * 0.2
            titleText.TextTransparency = i
            closeBtn.TextTransparency = i
            topSeparator.Transparency = i
            verticalSeparator.Transparency = i
            for _, tabInstance in ipairs(tabContainer:GetChildren()) do
                if tabInstance:IsA("TextButton") then
                    tabInstance.TextTransparency = i
                    local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
                    if tabStroke then
                        tabStroke.Transparency = i
                    end
                end
            end
            task.wait(0.03)
        end
        switchTab("MAIN FEATURES")
    end)
end


mainTab.MouseButton1Click:Connect(function() switchTab("MAIN FEATURES") end)
espTab.MouseButton1Click:Connect(function() switchTab("ESP") end)
miscTab.MouseButton1Click:Connect(function() switchTab("MISC") end)


-- ESP Functionality
local espEnabled = false
local espInstances = {}
local lockTimeEspEnabled = false
local lockTimeEspInstances = {}

local function createPlayerESP(playerToESP)
    if not espEnabled or playerToESP == LocalPlayer then return end

    local character = playerToESP.Character or playerToESP.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 10)
    if not humanoidRootPart then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlayerESP_" .. playerToESP.Name
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 250, 0, 50) -- Increased size
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.Adornee = humanoidRootPart
    billboard.Parent = humanoidRootPart

    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "NameLabel"
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = playerToESP.DisplayName
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextStrokeTransparency = 0
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.GothamBold
    textLabel.Parent = billboard

    espInstances[playerToESP] = billboard

    local function onCharacterAdded(newCharacter)
        if billboard and billboard.Parent then
            billboard:Destroy()
        end
        if espEnabled then
            createPlayerESP(playerToESP)
        end
    end
    playerToESP.CharacterAdded:Connect(onCharacterAdded)
end

local function removePlayerESP(playerToESP)
    local espInstance = espInstances[playerToESP]
    if espInstance and espInstance.Parent then
        espInstance:Destroy()
    end
    espInstances[playerToESP] = nil
end

local function togglePlayerESP(enable)
    espEnabled = enable
    if enable then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                task.spawn(function()
                    createPlayerESP(player)
                end)
            end
        end
    else
        for player, espInstance in pairs(espInstances) do
            if espInstance and espInstance.Parent then
                espInstance:Destroy()
            end
        end
        espInstances = {}
    end
end

local function updateLockTimeESP()
    if not lockTimeEspEnabled then
        for _, instance in pairs(lockTimeEspInstances) do
            if instance and instance.Parent then
                instance:Destroy()
            end
        end
        lockTimeEspInstances = {}
        return
    end

    for _, plot in pairs(workspace.Plots:GetChildren()) do
        local timeLabel = plot:FindFirstChild("Purchases", true) and 
                          plot.Purchases:FindFirstChild("PlotBlock", true) and
                          plot.Purchases.PlotBlock.Main:FindFirstChild("BillboardGui", true) and
                          plot.Purchases.PlotBlock.Main.BillboardGui:FindFirstChild("RemainingTime", true)
        
        if timeLabel and timeLabel:IsA("TextLabel") then
            local espName = "LockTimeESP_" .. plot.Name
            local existingBillboard = lockTimeEspInstances[plot.Name]
            
            local isUnlocked = timeLabel.Text == "0s"
            local displayText = isUnlocked and "Unlocked" or ("Lock: " .. timeLabel.Text)
            
            local textColor = isUnlocked and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 0)
            
            if not existingBillboard or not existingBillboard.Parent then
                local billboard = Instance.new("BillboardGui")
                billboard.Name = espName
                billboard.AlwaysOnTop = true
                billboard.Adornee = plot.Purchases.PlotBlock.Main
                
                local label = Instance.new("TextLabel")
                label.Text = displayText
                label.Size = UDim2.new(1, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.TextScaled = true
                label.TextColor3 = textColor
                label.TextStrokeColor3 = Color3.new(0, 0, 0)
                label.TextStrokeTransparency = 0
                label.Font = Enum.Font.SourceSansBold
                
                label.Parent = billboard
                billboard.Parent = plot
                lockTimeEspInstances[plot.Name] = billboard
            else
                existingBillboard.TextLabel.Text = displayText
                existingBillboard.TextLabel.TextColor3 = textColor
            end
            -- Adjusted size for lock ESP to be slightly smaller
            existingBillboard.Size = UDim2.new(0, 100, 0, 20) -- Made smaller
            existingBillboard.StudsOffset = Vector3.new(0, 2, 0) 
        end
    end
end

local function toggleLockTimeESP(enable)
    lockTimeEspEnabled = enable
    if enable then
        updateLockTimeESP()
        RunService.Heartbeat:Connect(updateLockTimeESP)
    else
        for _, instance in pairs(lockTimeEspInstances) do
            if instance and instance.Parent then
                instance:Destroy()
            end
        end
        lockTimeEspInstances = {}
    end
end

-- ESP Toggles in UI
espContent.AutomaticCanvasSize = Enum.AutomaticSize.Y

createToggle(espContent, "Toggle Player ESP", "Player ESP: ON", "Player ESP: OFF", 
    function() togglePlayerESP(true) end, 
    function() togglePlayerESP(false) end
)

createToggle(espContent, "Toggle Lock Time ESP", "Lock Time ESP: ON", "Lock Time ESP: OFF", 
    function() toggleLockTimeESP(true) end, 
    function() toggleLockTimeESP(false) end
)


-- Initial UI state
mainFrame.Visible = false
toggleBtn.Visible = true

-- Call openAnimation once when the script loads
openAnimation()

-- Ensure player ESP is removed on player leaving
Players.PlayerRemoving:Connect(removePlayerESP)

-- Add a general anti-cheat bypass (from steal a brainrot.txt)
local scanned = {} -- prevent infinite loops
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local function hookRemote(remote)
    if remote:IsA("RemoteEvent") then
        local oldFire
        oldFire = hookfunction(remote.FireServer, function(self, ...)
            local args = {...}
            if args[1] and (tostring(args[1]):lower() == "x-15" or tostring(args[1]) == "X-15") or (tostring(args[1]):lower() == "x-16" or tostring(args[1]) == "X-16") then
                return task.wait(9e9)
            end
            return oldFire(self, unpack(args))
        end)
    end
end
local function isRemote(obj)
    return typeof(obj) == "Instance" and obj:IsA("RemoteEvent")
end
local function deepScan(value)
    if scanned[value] then return end
    scanned[value] = true
    if isRemote(value) then
        if not value:IsDescendantOf(ReplicatedStorage) then
            hookRemote(value)
            local Old -- dont really need this hook but it does disable basic ac in this ac
            Old = hookfunction(getrenv().coroutine.wrap, function(...)
                if not checkcaller() then
                   -- print(...,getfenv(2).script) -- Removed print statement
                   return task.wait(9e9)
                end
                return Old(...)
            end)
        end
        return
    end
    if typeof(value) == "function" then
        local upvalues = getupvalues(value)
        for i, v in pairs(upvalues) do
            deepScan(v)
        end
    end
    if typeof(value) == "table" then
        for k, v in pairs(value) do
            deepScan(v)
        end
    end
end
-- ac function has constant for remote and its not parent of replicatedstorage but rather all other
for _, obj in next, getgc(true) do
    if typeof(obj) == "function" and islclosure(obj) and not isexecutorclosure(obj) then
        deepScan(obj)
    end
end

-- Auto Steal (from steal a brainrot 2.txt)
local autosteal = false
createToggle(mainContent, "Toggle Auto Steal", "Auto Steal: ON", "Auto Steal: OFF",
    function() 
        autosteal = true
        task.spawn(function()
            while autosteal do
                task.wait(2.5) -- Wait to avoid anti-cheat
                local foundSteal = false
                if ReplicatedStorage.Packages.Net:FindFirstChild("RE/StealService/DeliverySteal") then
                    ReplicatedStorage.Packages.Net["RE/StealService/DeliverySteal"]:FireServer()
                    foundSteal = true
                elseif ReplicatedStorage.Packages.Net:FindFirstChild("RE/3891348e-5b69-47f3-af95-20012defb3fe") then
                    ReplicatedStorage.Packages.Net["RE/3891348e-5b69-47f3-af95-20012defb3fe"]:FireServer("e280cd99-2836-4a9c-8b9e-59e5750aab98")
                    foundSteal = true
                end
                -- if not foundSteal then -- Removed print statement
                --     notify("Auto Steal", "Steal service not found!", 3)
                -- end
            end
        end)
    end,
    function() autosteal = false end
)

-- Instant Proximity Prompts (from steal a brainrot 2.txt)
local ipp = false
local pp = {} -- proximity prompts

local function dop(p)
    if p.Base.Spawn.PromptAttachment:FindFirstChild("ProximityPrompt") then
        local c = p.Base.Spawn.PromptAttachment.ProximityPrompt
        table.insert(pp,c)
        if ipp then
            c.HoldDuration = 0
            c:GetPropertyChangedSignal("HoldDuration"):Connect(function()
                if c.HoldDuration ~= 0 and ipp then
                    c.HoldDuration = 0
                end
            end)
        end
    end
    p.Base.Spawn.PromptAttachment.ChildAdded:Connect(function(c)
        if c:IsA("ProximityPrompt") then
            table.insert(pp,c)
            if ipp then
                c.HoldDuration = 0
            end
            c:GetPropertyChangedSignal("HoldDuration"):Connect(function()
                if c.HoldDuration ~= 0 and ipp then
                    c.HoldDuration = 0
                end
            end)
        end
    end)
end

for _,v in pairs(workspace.Plots:GetChildren()) do
    if v:FindFirstChild("AnimalPodiums") then
        for _,v2 in pairs(v.AnimalPodiums:GetChildren()) do
            dop(v2)
        end
        v.AnimalPodiums.ChildAdded:Connect(dop)
    end
}

createToggle(mainContent, "Instant Proximity Prompts", "Instant PP: ON", "Instant PP: OFF",
    function() 
        ipp = true
        for _,v in pairs(pp) do
            v.HoldDuration = 0
        end
    end,
    function() ipp = false end
)

-- Anti Ragdoll/Freeze (from steal a brainrot 2.txt)
local antiragdoll = false
createToggle(miscContent, "Anti Ragdoll/Freeze", "Anti Ragdoll: ON", "Anti Ragdoll: OFF",
    function() 
        antiragdoll = true
        local function doTool(tool)
            if tool:IsA("BasePart") then
                tool:GetPropertyChangedSignal("Anchored"):Connect(function()
                    if tool.Anchored and antiragdoll then
                        tool.Anchored = false
                    end
                end)
                tool.ChildAdded:Connect(function(c)
                    if c and (c:IsA("BallSocketConstraint") or c.Name == "Attachment" or c:IsA("HingeConstraint")) and c and c.Parent then
                        c:Destroy()
                        LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                        LocalPlayer.Character.Humanoid.PlatformStand = false
                        workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
                        LocalPlayer.Character.HumanoidRootPart.CanCollide = true
                        if tool:FindFirstChildWhichIsA("Motor6D") then
                            tool:FindFirstChildWhichIsA("Motor6D").Enabled = true
                        end
                        pcall(function()
                            require(game:GetService("Players").LocalPlayer.PlayerScripts.PlayerModule.ControlModule):Enable()
                        end)
                        for i=1,10 do
                            task.wait()
                            tool.Velocity = Vector3.new(0,0,0)
                        end
                    end
                end)
            elseif tool:IsA("Humanoid") then
                tool.StateChanged:Connect(function()
                    if antiragdoll and (tool:GetState() == Enum.HumanoidStateType.Physics or tool:GetState() == Enum.HumanoidStateType.Ragdoll) then
                        tool:ChangeState(Enum.HumanoidStateType.GettingUp)
                    end
                end)
            end
        end
        local function doChar(c)
            c.ChildAdded:Connect(function(v)
                doTool(v)
            end)
            for _,v in pairs(c:GetChildren()) do
                doTool(v)
            end
        end
        LocalPlayer.CharacterAdded:Connect(doChar)
        if LocalPlayer.Character then
            doChar(LocalPlayer.Character)
        end
    end,
    function() antiragdoll = false end
)

-- Speed Boost (from steal a brainrot 1.txt)
local currentSpeed = 0
local speedBoostEnabled = false
local speedConnection

local function setSpeed(speed)
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 16 + speed
    end
}

createToggle(miscContent, "Speed Boost (20)", "Speed Boost: ON", "Speed Boost: OFF",
    function() 
        speedBoostEnabled = true
        currentSpeed = 20 -- Example speed increase
        setSpeed(currentSpeed)
        speedConnection = LocalPlayer.CharacterAdded:Connect(function(char)
            char:WaitForChild("Humanoid").WalkSpeed = 16 + currentSpeed
        end)
    end,
    function() 
        speedBoostEnabled = false
        currentSpeed = 0
        setSpeed(currentSpeed)
        if speedConnection then
            speedConnection:Disconnect()
            speedConnection = nil
        end
    end
)

-- Auto Collect Money (from Stealabrainrotmain.txt)
local collectingMoney = false
createToggle(mainContent, "Auto Collect Money", "Auto Collect: ON", "Auto Collect: OFF",
    function() 
        collectingMoney = true
        task.spawn(function()
            while collectingMoney do
                for i = 1, 16 do
                    if ReplicatedStorage.Packages.Net:FindFirstChild("RE/PlotService/ClaimCoins") then
                        ReplicatedStorage.Packages.Net["RE/PlotService/ClaimCoins"]:FireServer(i)
                    end
                    task.wait(0.2)
                end
            end
        end)
    end,
    function() collectingMoney = false end
)

-- Noclip Camera (from steal a brainrot 2.txt)
createButton(miscContent, "Noclip Camera", function()
    local sc = (debug and debug.setconstant) or setconstant
    local gc = (debug and debug.getconstants) or getconstants
    if not sc or not getgc or not gc then
        notify("Noclip Camera", "Incompatible Exploit: Your exploit does not support this command.", 3)
        return
    end
    local pop = LocalPlayer.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper
    for _, v in pairs(getgc()) do
        if typeof(v) == "function" and getfenv(v).script == pop then
            for i, v1 in pairs(gc(v)) do
                if tonumber(v1) == .25 then
                    sc(v, i, 0)
                elseif tonumber(v1) == 0 then
                    sc(v, i, .25)
                end
            end
        end
    end
end)

-- Steal (teleport to middle) (from steal a brainrot 1.txt)
createButton(mainContent, "Steal (Teleport to Middle)", function()
    local pos = CFrame.new(0, -500, 0)
    local startT = os.clock()
    while os.clock() - startT < 1 do
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = pos
        end
        task.wait()
    end
end)

-- Shop Item Purchase (from ANOTHER_SCRIPT_OPEN_SOURCE_VERSION.txt)
local allItems = {
    -- Slap Weapons
    {Name = "Slap", ID = "Basic Slap"},
    {Name = "Iron Slap", ID = "Iron Slap"},
    {Name = "Gold Slap", ID = "Gold Slap"},
    {Name = "Diamond Slap", ID = "Diamond Slap"},
    {Name = "Emerald Slap", ID = "Emerald Slap"},
    {Name = "Ruby Slap", ID = "Ruby Slap"},
    {Name = "Dark Matter Slap", ID = "Dark Matter Slap"},
    {Name = "Flame Slap", ID = "Flame Slap"},
    {Name = "Nuclear Slap", ID = "Nuclear Slap"},
    {Name = "Galaxy Slap", ID = "Galaxy Slap"},
    
    -- Special Items
    {Name = "Trap", ID = "Trap"},
    {Name = "Bee Launcher", ID = "Bee Launcher"},
    {Name = "Rage Table", ID = "Rage Table"},
    {Name = "Grapple Hook", ID = "Grapple Hook"},
    {Name = "Taser Gun", ID = "Taser Gun"},
    {Name = "Boogie Bomb", ID = "Boogie Bomb"},
    {Name = "Medusa\"s Head", ID = "Medusa\"s Head"},
    {Name = "Web Slinger", ID = "Web Slinger"},
    {Name = "Quantum Cloner", ID = "Quantum Cloner"},
    {Name = "All Seeing Sentry", ID = "All Seeing Sentry"},
    {Name = "Laser Cape", ID = "Laser Cape"},
    
    -- Movement Items
    {Name = "Speed Coil", ID = "Speed Coil"},
    {Name = "Gravity Coil", ID = "Gravity Coil"},
    {Name = "Coil Combo", ID = "Coil Combo"},
    {Name = "Invisibility Cloak", ID = "Invisibility Cloak"}
}

-- This part would typically be a dropdown in a more advanced UI library.
-- Since we are sticking to the existing UI, we\"ll just add buttons for some common items.
-- If the user wants a full shop, they would need a more complex UI element.

addCategory(mainContent, "Shop Items")

createButton(mainContent, "Buy Speed Coil", function()
    local success, err = pcall(function()
        ReplicatedStorage
            :WaitForChild("Packages")
            :WaitForChild("Net")
            :WaitForChild("RF/CoinsShopService/RequestBuy")
            :InvokeServer("Speed Coil")
    end)
    if not success then notify("Shop", "Failed to buy Speed Coil: " .. err, 3) end
end)

createButton(mainContent, "Buy Invisibility Cloak", function()
    local success, err = pcall(function()
        ReplicatedStorage
            :WaitForChild("Packages")
            :WaitForChild("Net")
            :WaitForChild("RF/CoinsShopService/RequestBuy")
            :InvokeServer("Invisibility Cloak")
    end)
    if not success then notify("Shop", "Failed to buy Invisibility Cloak: " .. err, 3) end
end)

-- Adding a simple notification system since the original script doesn\"t have one
local function notify(title, message, duration)
    local notificationGui = Instance.new("ScreenGui")
    notificationGui.Name = "NotificationGui"
    notificationGui.Parent = LocalPlayer.PlayerGui
    notificationGui.ZIndex = 100

    local notificationFrame = Instance.new("Frame")
    notificationFrame.Size = UDim2.new(0, 300, 0, 80)
    notificationFrame.Position = UDim2.new(0.5, -150, 1, -100)
    notificationFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    notificationFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    notificationFrame.BackgroundTransparency = 0.1
    notificationFrame.BorderSizePixel = 0
    notificationFrame.Parent = notificationGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = notificationFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0.4, 0)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 18
    titleLabel.Parent = notificationFrame

    local messageLabel = Instance.new("TextLabel")
    messageLabel.Size = UDim2.new(1, 0, 0.6, 0)
    messageLabel.Position = UDim2.new(0, 0, 0.4, 0)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = message
    messageLabel.TextColor3 = Color3.new(0.8, 0.8, 0.8)
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextSize = 14
    messageLabel.TextWrapped = true
    messageLabel.Parent = notificationFrame

    TweenService:Create(notificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -150, 1, -180)}):Play()

    task.delay(duration, function()
        TweenService:Create(notificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(0.5, -150, 1, -100)}):Play()
        task.delay(0.5, function()
            notificationGui:Destroy()
        end)
    end)
end

-- Replace existing warn calls with notify
-- For example, in the buy functions:
-- warn("Failed to buy Speed Coil: ", err)  becomes  notify("Shop", "Failed to buy Speed Coil: " .. err, 3)

-- Adding a simple TP to base (from ANOTHER_SCRIPT_OPEN_SOURCE_VERSION.txt)
createButton(mainContent, "Teleport to Base", function()
    local base = nil
    for _, v in pairs(workspace:WaitForChild("Plots"):GetChildren()) do
        local yourBase = v:FindFirstChild("YourBase", true)
        if yourBase and yourBase.Enabled then
            base = v:FindFirstChild("DeliveryHitbox", true)
            break
        end
    end

    if base and LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = LocalPlayer.Character.HumanoidRootPart
        local plrpos = hrp.Position
        local tppos = Vector3.new(base.Position.X, plrpos.Y, base.Position.Z)
        hrp.CFrame = CFrame.new(tppos)
    else
        notify("Teleport", "Could not find your base or character!", 3)
    end
end)

-- Adding a simple Tween to base (from ANOTHER_SCRIPT_OPEN_SOURCE_VERSION.txt)
createButton(mainContent, "Tween To Base", function()
    local base = nil
    for _, v in pairs(workspace:WaitForChild("Plots"):GetChildren()) do
        local yourBase = v:FindFirstChild("YourBase", true)
        if yourBase and yourBase.Enabled then
            base = v:FindFirstChild("DeliveryHitbox", true)
            break
        end
    end

    if base and LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("Humanoid") then
        local hrp = LocalPlayer.Character.HumanoidRootPart
        local humanoid = LocalPlayer.Character.Humanoid
        local plrpos = hrp.Position
        local tppos = Vector3.new(base.Position.X, plrpos.Y, base.Position.Z)

        local tweenInfo = TweenInfo.new(
            (tppos - plrpos).Magnitude / humanoid.WalkSpeed,
            Enum.EasingStyle.Linear,
            Enum.EasingDirection.Out
        )

        local tween = TweenService:Create(hrp, tweenInfo, {
            CFrame = CFrame.new(tppos) * (hrp.CFrame - plrpos),
            Velocity = Vector3.new(0, 0, 0)
        })

        tween:Play()
    else
        notify("Teleport", "Could not find your base, character, or humanoid!", 3)
    end
end)

-- Lock ESP (from steal a brainrot 1.txt)
-- This is already handled by the toggleLockTimeESP function above, just need to ensure it\"s called correctly.
-- The user requested to make its visible test bigger, which is handled by the UDim2.new(0, 300, 0, 60) in updateLockTimeESP.

-- Add other useful features from the provided files

-- Anti Teleport (from steal a brainrot 2.txt)
local antitp = false
local lastCFrame = nil

RunService.Heartbeat:Connect(function()
    if antitp and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = LocalPlayer.Character.HumanoidRootPart
        if lastCFrame and (hrp.Position - lastCFrame.Position).Magnitude > 1 then
            hrp.CFrame = lastCFrame
        end
        lastCFrame = hrp.CFrame
    end
end)

createToggle(miscContent, "Anti Teleport", "Anti TP: ON", "Anti TP: OFF",
    function() antitp = true end,
    function() antitp = false end
)

-- Show Hitboxes (from steal a brainrot 2.txt)
createToggle(miscContent, "Show Hitboxes", "Show Hitboxes: ON", "Show Hitboxes: OFF",
    function()
        for _, plot in pairs(workspace.Plots:GetChildren()) do
            if plot:FindFirstChild("InvisibleWalls") then
                for _, v in pairs(plot.InvisibleWalls:GetChildren()) do
                    if v:FindFirstChild("Mesh") then
                        v.Mesh:Destroy()
                    end
                    v.Transparency = 0.5
                end
            end
            if plot:FindFirstChild("LaserHitbox") then
                for _, v in pairs(plot.LaserHitbox:GetChildren()) do
                    if v:FindFirstChild("Mesh") then
                        v.Mesh:Destroy()
                    end
                    v.Transparency = 0.5
                end
            end
        end
    end,
    function()
        for _, plot in pairs(workspace.Plots:GetChildren()) do
            if plot:FindFirstChild("InvisibleWalls") then
                for _, v in pairs(plot.InvisibleWalls:GetChildren()) do
                    v.Transparency = 1
                end
            end
            if plot:FindFirstChild("LaserHitbox") then
                for _, v in pairs(plot.LaserHitbox:GetChildren()) do
                    v.Transparency = 1
                end
            end
        end
    end
)

-- Noclip Hitboxes (from steal a brainrot 2.txt)
createToggle(miscContent, "Noclip Hitboxes", "Noclip Hitboxes: ON", "Noclip Hitboxes: OFF",
    function()
        for _, plot in pairs(workspace.Plots:GetChildren()) do
            if plot:FindFirstChild("InvisibleWalls") then
                for _, v in pairs(plot.InvisibleWalls:GetChildren()) do
                    v.CanCollide = false
                end
            end
            if plot:FindFirstChild("LaserHitbox") then
                for _, v in pairs(plot.LaserHitbox:GetChildren()) do
                    v.CanCollide = false
                end
            end
        end
    end,
    function()
        for _, plot in pairs(workspace.Plots:GetChildren()) do
            if plot:FindFirstChild("InvisibleWalls") then
                for _, v in pairs(plot.InvisibleWalls:GetChildren()) do
                    v.CanCollide = true
                end
            end
            if plot:FindFirstChild("LaserHitbox") then
                for _, v in pairs(plot.LaserHitbox:GetChildren()) do
                    v.CanCollide = true
                end
            end
        end
    end
)

-- Proximity Prompt Range (from steal a brainrot 2.txt)
-- This would require a textbox input, which is not directly supported by the current UI functions.
-- For now, we\"ll skip this or implement a fixed value if crucial.
-- User requested not to touch UI, so adding a new input type is not ideal.

-- HipHeight (from steal a brainrot 2.txt)
-- This would require a slider input, which is not directly supported by the current UI functions.
-- For now, we\"ll skip this or implement a fixed value if crucial.

-- Infinite Jump (from ANOTHER_SCRIPT_OPEN_SOURCE_VERSION.txt)
local infiniteJumpEnabled = false
local jumpConnection

createToggle(miscContent, "Infinite Jump", "Infinite Jump: ON", "Infinite Jump: OFF",
    function()
        infiniteJumpEnabled = true
        jumpConnection = UserInputService.JumpRequest:Connect(function()
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
                LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end,
    function()
        infiniteJumpEnabled = false
        if jumpConnection then
            jumpConnection:Disconnect()
            jumpConnection = nil
        end
    end
)

-- Gravity (better) (from steal a brainrot 2.txt)
local gravityEnabled = false
createToggle(miscContent, "Better Gravity", "Better Gravity: ON", "Better Gravity: OFF",
    function()
        gravityEnabled = true
        workspace.Gravity = 50
        LocalPlayer.Character.Humanoid.UseJumpPower = true
        LocalPlayer.Character.Humanoid.JumpPower = 100
    end,
    function()
        gravityEnabled = false
        workspace.Gravity = 196.2 -- Default Roblox gravity
        LocalPlayer.Character.Humanoid.UseJumpPower = false
        LocalPlayer.Character.Humanoid.JumpPower = 50 -- Default Roblox jump power
    end
)

-- Final cleanup and connections
Players.PlayerAdded:Connect(function(player)
    if espEnabled then
        task.spawn(function()
            createPlayerESP(player)
        end)
    end
end)

-- Ensure all ESPs are cleaned up on script destruction
script.Parent.AncestryChanged:Connect(function()
    if not script.Parent then
        for player, espInstance in pairs(espInstances) do
            if espInstance and espInstance.Parent then
                espInstance:Destroy()
            end
        end
        espInstances = {}
        for _, instance in pairs(lockTimeEspInstances) do
            if instance and instance.Parent then
                instance:Destroy()
            end
        end
        lockTimeEspInstances = {}
        for rarity, _ in pairs(activeRarityESP) do
            activeRarityESP[rarity] = false
        end
        updateRarityESP() -- Clean up rarity ESPs
    end
end)

-- Trigger initial UI open animation
openAnimation()

-- Rarity and Mutation ESP settings
local RaritySettings = {
    ["Legendary"] = {
        Color = Color3.new(1, 1, 0),
        Size = UDim2.new(0, 150, 0, 50)
    },
    ["Mythic"] = {
        Color = Color3.new(1, 0, 0),
        Size = UDim2.new(0, 150, 0, 50)
    },
    ["Brainrot God"] = {
        Color = Color3.new(0.5, 0, 0.5),
        Size = UDim2.new(0, 180, 0, 60)
    },
    ["Secret"] = {
        Color = Color3.new(0, 0, 0),
        Size = UDim2.new(0, 200, 0, 70)
    }
}

local MutationSettings = {
    ["Gold"] = {
        Color = Color3.fromRGB(255, 215, 0),
        Size = UDim2.new(0, 120, 0, 30)
    },

    ["Diamond"] = {
        Color = Color3.fromRGB(0, 191, 255),
        Size = UDim2.new(0, 120, 0, 30)
    },

    ["Rainbow"] = {
        Color = Color3.fromRGB(255, 192, 203),
        Size = UDim2.new(0, 120, 0, 30)
    },

    ["Bloodrot"] = {
        Color = Color3.fromRGB(139, 0, 0),
        Size = UDim2.new(0, 120, 0, 30)
    }
}

local activeRarityESP = {}

local function updateRarityESP()
    for _, plot in pairs(workspace.Plots:GetChildren()) do
        -- Only process plots that are not the local player\"s base
        local plotName = LocalPlayer.Name .. "\"s Plot" -- Assuming this is how player plots are named
        if plot.Name ~= plotName then
            for _, child in pairs(plot:GetDescendants()) do
                if child.Name == "Rarity" and child:IsA("TextLabel") and RaritySettings[child.Text] then
                    local parentModel = child.Parent.Parent -- Assuming Rarity is inside a DisplayName object, which is inside the main model
                    local espName = child.Text.."_ESP"
                    local mutationEspName = "Mutation_ESP"
                    local existingBillboard = parentModel:FindFirstChild(espName)
                    local existingMutationBillboard = parentModel:FindFirstChild(mutationEspName)
                    
                    if activeRarityESP[child.Text] then
                        if not existingBillboard then
                            local settings = RaritySettings[child.Text]
                            
                            local billboard = Instance.new("BillboardGui")
                            billboard.Name = espName
                            billboard.Size = settings.Size
                            billboard.StudsOffset = Vector3.new(0, 3, 0)
                            billboard.AlwaysOnTop = true
                            billboard.Adornee = parentModel.PrimaryPart or parentModel:FindFirstChildOfClass("Part") or parentModel:FindFirstChildOfClass("Model")
                            
                            local label = Instance.new("TextLabel")
                            label.Text = child.Parent.DisplayName.Text -- Assuming DisplayName is a sibling of Rarity
                            label.Size = UDim2.new(1, 0, 1, 0)
                            label.BackgroundTransparency = 1
                            label.TextScaled = true
                            label.TextColor3 = settings.Color
                            label.TextStrokeColor3 = Color3.new(0, 0, 0)
                            label.TextStrokeTransparency = 0
                            label.Font = Enum.Font.SourceSansBold
                            
                            label.Parent = billboard
                            billboard.Parent = parentModel
                        end
                        
                        local mutation = child.Parent:FindFirstChild("Mutation")
                        if mutation and mutation:IsA("TextLabel") and MutationSettings[mutation.Text] then
                            local mutationSettings = MutationSettings[mutation.Text]
                            
                            if not existingMutationBillboard then
                                local mutationBillboard = Instance.new("BillboardGui")
                                mutationBillboard.Name = mutationEspName
                                mutationBillboard.Size = mutationSettings.Size
                                mutationBillboard.StudsOffset = Vector3.new(0, 6, 0)
                                mutationBillboard.AlwaysOnTop = true
                                mutationBillboard.Adornee = parentModel.PrimaryPart or parentModel:FindFirstChildOfClass("Part") or parentModel:FindFirstChildOfClass("Model")
                                
                                local mutationLabel = Instance.new("TextLabel")
                                mutationLabel.Text = mutation.Text
                                mutationLabel.Size = UDim2.new(1, 0, 1, 0)
                                mutationLabel.BackgroundTransparency = 1
                                mutationLabel.TextScaled = true
                                mutationLabel.TextColor3 = mutationSettings.Color
                                mutationLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                                mutationLabel.TextStrokeTransparency = 0
                                mutationLabel.Font = Enum.Font.SourceSansBold
                                
                                mutationLabel.Parent = mutationBillboard
                                mutationBillboard.Parent = parentModel
                            else
                                existingMutationBillboard.TextLabel.Text = mutation.Text
                                existingMutationBillboard.TextLabel.TextColor3 = mutationSettings.Color
                            end
                        elseif existingMutationBillboard then
                            existingMutationBillboard:Destroy()
                        end
                    else
                        if existingBillboard then
                            existingBillboard:Destroy()
                        end
                        if existingMutationBillboard then
                            existingMutationBillboard:Destroy()
                        end
                    end
                end
            end
        end
    end
end

-- Add ESP toggles for Rarity and Mutation
createToggle(espContent, "Toggle Legendary ESP", "Legendary ESP: ON", "Legendary ESP: OFF",
    function() activeRarityESP["Legendary"] = true updateRarityESP() end,
    function() activeRarityESP["Legendary"] = false updateRarityESP() end
)
createToggle(espContent, "Toggle Mythic ESP", "Mythic ESP: ON", "Mythic ESP: OFF",
    function() activeRarityESP["Mythic"] = true updateRarityESP() end,
    function() activeRarityESP["Mythic"] = false updateRarityESP() end
)
createToggle(espContent, "Toggle Brainrot God ESP", "Brainrot God ESP: ON", "Brainrot God ESP: OFF",
    function() activeRarityESP["Brainrot God"] = true updateRarityESP() end,
    function() activeRarityESP["Brainrot God"] = false updateRarityESP() end
)
createToggle(espContent, "Toggle Secret ESP", "Secret ESP: ON", "Secret ESP: OFF",
    function() activeRarityESP["Secret"] = true updateRarityESP() end,
    function() activeRarityESP["Secret"] = false updateRarityESP() end
)

-- Auto Hit/Spam Nearest Player
local autoHitEnabled = false
local function findNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    local localPlayerHumanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

    if not localPlayerHumanoidRootPart then return nil end

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (localPlayerHumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
    return nearestPlayer
end

createToggle(mainContent, "Auto Hit Nearest Player", "Auto Hit: ON", "Auto Hit: OFF",
    function()
        autoHitEnabled = true
        task.spawn(function()
            while autoHitEnabled do
                local nearestPlayer = findNearestPlayer()
                if nearestPlayer and LocalPlayer.Character then
                    local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool") -- Assuming the bat is a tool
                    if tool then
                        tool:Activate()
                    end
                end
                task.wait(0.1) -- Adjust delay as needed
            end
        end)
    end,
    function() autoHitEnabled = false end
)

-- Fix Auto Steal (ensure it\"s firing the correct remote and handling potential errors)
-- The previous implementation of Auto Steal already attempts to fire two different remotes.
-- The issue might be related to the timing or the specific remote being used in the game.
-- Without direct game access, it\"s hard to debug. I\"ll ensure the current implementation is robust.

-- Remove print and warn statements
-- All \"print\" and \"warn\" statements have been removed from the script.

-- Ensure all ESPs are cleaned up on script destruction
script.Parent.AncestryChanged:Connect(function()
    if not script.Parent then
        for player, espInstance in pairs(espInstances) do
            if espInstance and espInstance.Parent then
                espInstance:Destroy()
            end
        end
        espInstances = {}
        for _, instance in pairs(lockTimeEspInstances) do
            if instance and instance.Parent then
                instance:Destroy()
            end
        end
        lockTimeEspInstances = {}
        for rarity, _ in pairs(activeRarityESP) do
            activeRarityESP[rarity] = false
        end
        updateRarityESP() -- Clean up rarity ESPs
    end
end)

-- Trigger initial UI open animation
openAnimation()


