local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

if game:GetService("CoreGui"):FindFirstChild("SOULS_HUB") then
    game:GetService("CoreGui").SOULS_HUB:Destroy()
end

do -- UI Container Block
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SOULS_HUB"
    screenGui.Parent = game:GetService("CoreGui")
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 700, 0, 380)
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BackgroundTransparency = 0.1
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.ZIndex = 1
    mainFrame.Visible = false
    mainFrame.Parent = screenGui
    
    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 2
    outline.Transparency = 0.1
    outline.Parent = mainFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 16)
    corner.Parent = mainFrame
    
    local gradient = Instance.new("UIGradient")
    gradient.Rotation = 90
    gradient.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0.6),
        NumberSequenceKeypoint.new(1, 0.8)
    })
    gradient.Parent = mainFrame
end

do -- Toggle Button Block
    local toggleBtn = Instance.new("TextButton")
    toggleBtn.Name = "ToggleButton"
    toggleBtn.Size = UDim2.new(0, 140, 0, 40)
    toggleBtn.Position = UDim2.new(0.5, -70, 0, 20)
    toggleBtn.AnchorPoint = Vector2.new(0.5, 0)
    toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    toggleBtn.BackgroundTransparency = 0.3
    toggleBtn.Text = "TOGGLE MENU"
    toggleBtn.TextColor3 = Color3.new(1, 1, 1)
    toggleBtn.Font = Enum.Font.GothamBold
    toggleBtn.TextSize = 14
    toggleBtn.Visible = false
    toggleBtn.ZIndex = 10
    toggleBtn.Parent = screenGui
    
    local toggleTextOutline = Instance.new("UIStroke")
    toggleTextOutline.Color = Color3.new(0, 0, 0)
    toggleTextOutline.Thickness = 1
    toggleTextOutline.Transparency = 0
    toggleTextOutline.Parent = toggleBtn
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 12)
    toggleCorner.Parent = toggleBtn
    
    local toggleOutline = Instance.new("UIStroke")
    toggleOutline.Color = Color3.new(1, 1, 1)
    toggleOutline.Thickness = 1
    toggleOutline.Transparency = 0.2
    toggleOutline.Parent = toggleBtn
end

do -- Fixed Draggable Function Block
    local function makeDraggable(frame)
        if not frame then return end -- Add nil check
        
        local dragging = false
        local dragInput, dragStart, startPos

        -- Add connection checks
        local inputBeganCon = frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position
            end
        end)

        local inputEndedCon = frame.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = false
            end
        end)

        local inputChangedCon = UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                frame.Position = UDim2.new(
                    startPos.X.Scale,
                    startPos.X.Offset + delta.X,
                    startPos.Y.Scale,
                    startPos.Y.Offset + delta.Y
                )
            end
        end)

        -- Cleanup connections when frame is destroyed
        frame.AncestryChanged:Connect(function()
            if not frame.Parent then
                inputBeganCon:Disconnect()
                inputEndedCon:Disconnect()
                inputChangedCon:Disconnect()
            end
        end)
    end

    -- Only make draggable if objects exist
    if mainFrame then makeDraggable(mainFrame) end
    if toggleBtn then makeDraggable(toggleBtn) end
end

do -- Close Button Block
    local closeBtn = Instance.new("TextButton")
    closeBtn.Name = "CloseButton"
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -35, 0, 10)
    closeBtn.AnchorPoint = Vector2.new(1, 0)
    closeBtn.BackgroundTransparency = 1
    closeBtn.Text = "X"
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.TextSize = 20
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.ZIndex = 3
    closeBtn.Parent = mainFrame
    
    local closeTextOutline = Instance.new("UIStroke")
    closeTextOutline.Color = Color3.new(0, 0, 0)
    closeTextOutline.Thickness = 1
    closeTextOutline.Transparency = 0
    closeTextOutline.Parent = closeBtn
end

do -- Title Block
    local titleFont = Enum.Font.GothamBold
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(0, 200, 0, 30)
    titleText.Position = UDim2.new(0, 20, 0, 10)
    titleText.BackgroundTransparency = 1
    titleText.Text = "SOULS HUB"
    titleText.TextColor3 = Color3.new(1, 1, 1)
    titleText.TextSize = 24
    titleText.Font = titleFont
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.ZIndex = 2
    titleText.Parent = mainFrame
    
    local titleTextOutline = Instance.new("UIStroke")
    titleTextOutline.Color = Color3.new(0, 0, 0)
    titleTextOutline.Thickness = 1
    titleTextOutline.Transparency = 0
    titleTextOutline.Parent = titleText
    
    local titleGlow = Instance.new("UIGradient")
    titleGlow.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.5, Color3.new(0.85, 0.85, 0.85)),
        ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
    })
    titleGlow.Rotation = -45
    titleGlow.Transparency = NumberSequence.new(0.6)
    titleGlow.Parent = titleText
end

do -- Separators Block
    local topSeparator = Instance.new("Frame")
    topSeparator.Name = "TopSeparator"
    topSeparator.Size = UDim2.new(1, -40, 0, 1)
    topSeparator.Position = UDim2.new(0, 20, 0, 50)
    topSeparator.BackgroundColor3 = Color3.new(1, 1, 1)
    topSeparator.BorderSizePixel = 0
    topSeparator.ZIndex = 2
    topSeparator.Parent = mainFrame
    
    local verticalSeparator = Instance.new("Frame")
    verticalSeparator.Name = "VerticalSeparator"
    verticalSeparator.Size = UDim2.new(0, 1, 1, -120)
    verticalSeparator.Position = UDim2.new(0, 170, 0, 70)
    verticalSeparator.BackgroundColor3 = Color3.new(1, 1, 1)
    verticalSeparator.BorderSizePixel = 0
    verticalSeparator.ZIndex = 2
    verticalSeparator.Parent = mainFrame
end

do -- Container Block
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "Tabs"
    tabContainer.Size = UDim2.new(0, 150, 0, 280)
    tabContainer.Position = UDim2.new(0, 15, 0, 70)
    tabContainer.BackgroundTransparency = 1
    tabContainer.ZIndex = 2
    tabContainer.Parent = mainFrame
    
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "Content"
    contentContainer.Size = UDim2.new(0, 500, 0, 280)
    contentContainer.Position = UDim2.new(1, -515, 0, 70)
    contentContainer.BackgroundTransparency = 1
    contentContainer.ZIndex = 2
    contentContainer.Parent = mainFrame
end

do -- Tab Creation Block
    local function createTab(tabName)
        -- First ensure containers exist
        if not tabContainer or not contentContainer then
            warn("UI containers not initialized!")
            return nil, nil
        end

        -- Create tab button
        local tab = Instance.new("TextButton")
        tab.Name = tabName
        tab.Size = UDim2.new(0, 140, 0, 30)
        
        -- Safe position calculation
        local childCount = 0
        for _, child in ipairs(tabContainer:GetChildren()) do
            if child:IsA("TextButton") then
                childCount = childCount + 1
            end
        end
        tab.Position = UDim2.new(0, 0, 0, childCount * 35)

        -- Tab visual properties
        tab.BackgroundTransparency = 1
        tab.Text = tabName
        tab.TextColor3 = Color3.new(1, 1, 1)
        tab.TextSize = 18
        tab.Font = Enum.Font.GothamBold
        tab.TextTransparency = 0.5
        tab.ZIndex = 3

        -- Tab outline effects
        local tabTextOutline = Instance.new("UIStroke")
        tabTextOutline.Color = Color3.new(0, 0, 0)
        tabTextOutline.Thickness = 1
        tabTextOutline.Transparency = 0.5
        tabTextOutline.Parent = tab

        local outline = Instance.new("UIStroke")
        outline.Color = Color3.new(1, 1, 1)
        outline.Thickness = 1
        outline.Transparency = 0.5
        outline.Parent = tab

        -- Create content frame
        local content = Instance.new("ScrollingFrame")
        content.Name = tabName.."Content"
        content.Size = UDim2.new(1, 0, 1, 0)
        content.BackgroundTransparency = 1
        content.Visible = false
        content.ScrollBarThickness = 5
        content.AutomaticCanvasSize = Enum.AutomaticSize.Y
        content.Parent = contentContainer

        -- Tab click handler
        tab.MouseButton1Click:Connect(function()
            if switchTab then
                switchTab(tabName)
            end
        end)

        tab.Parent = tabContainer
        return tab, content
    end

    local mainTab, mainContent = createTab("MAIN FEATURES")
    local espTab, espContent = createTab("ESP")
    local miscTab, miscContent = createTab("MISC")
end

do -- UI Components Block
    local function addCategory(parent, text)
        local category = Instance.new("TextLabel")
        category.Name = text.."Category"
        category.Size = UDim2.new(0, 200, 0, 20)
        category.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
        category.BackgroundTransparency = 1
        category.Text = text
        category.TextColor3 = Color3.new(1, 1, 1)
        category.TextSize = 16
        category.Font = titleFont
        category.TextXAlignment = Enum.TextXAlignment.Left
        category.ZIndex = 3

        local categoryTextOutline = Instance.new("UIStroke")
        categoryTextOutline.Color = Color3.new(0, 0, 0)
        categoryTextOutline.Thickness = 1
        categoryTextOutline.Transparency = 0
        categoryTextOutline.Parent = category

        category.Parent = parent
    end

    local function createButton(parent, buttonText, func)
        local button = Instance.new("TextButton")
        button.Name = buttonText
        button.Size = UDim2.new(0, 200, 0, 40)
        button.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
        button.BackgroundTransparency = 1
        button.Text = buttonText
        button.TextColor3 = Color3.new(1, 1, 1)
        button.Font = Enum.Font.GothamBold
        button.TextSize = 14
        button.ZIndex = 3

        local buttonTextOutline = Instance.new("UIStroke")
        buttonTextOutline.Color = Color3.new(0, 0, 0)
        buttonTextOutline.Thickness = 1
        buttonTextOutline.Transparency = 0.3
        buttonTextOutline.Parent = button

        local outline = Instance.new("UIStroke")
        outline.Color = Color3.new(1, 1, 1)
        outline.Thickness = 1
        outline.Transparency = 0.3
        outline.Parent = button

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = button

        button.MouseButton1Click:Connect(function()
            if func then func() end
        end)

        button.MouseEnter:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.2), {
                BackgroundTransparency = 0.85,
                TextColor3 = Color3.new(0.9, 0.9, 0.9)
            }):Play()
        end)

        button.MouseLeave:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.2), {
                BackgroundTransparency = 1,
                TextColor3 = Color3.new(1, 1, 1)
            }):Play()
        end)

        button.Parent = parent
        return button
    end
end
do -- Toggle System Block
    local function createToggle(parent, defaultText, onText, offText, onFunction, offFunction)
        local toggleEnabled = false
        local toggleButton = Instance.new("TextButton")
        toggleButton.Name = "ToggleButton"
        toggleButton.Size = UDim2.new(0, 200, 0, 40)
        toggleButton.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
        toggleButton.BackgroundTransparency = 1
        toggleButton.Text = defaultText or "TOGGLE"
        toggleButton.TextColor3 = Color3.new(1, 1, 1)
        toggleButton.Font = Enum.Font.GothamBold
        toggleButton.TextSize = 14
        toggleButton.ZIndex = 3

        local toggleTextOutline = Instance.new("UIStroke")
        toggleTextOutline.Color = Color3.new(0, 0, 0)
        toggleTextOutline.Thickness = 1
        toggleTextOutline.Transparency = 0.3
        toggleTextOutline.Parent = toggleButton

        local outline = Instance.new("UIStroke")
        outline.Color = Color3.new(1, 1, 1)
        outline.Thickness = 1
        outline.Transparency = 0.3
        outline.Parent = toggleButton

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = toggleButton

        toggleButton.MouseEnter:Connect(function()
            TweenService:Create(toggleButton, TweenInfo.new(0.2), {
                BackgroundTransparency = 0.85,
                TextColor3 = Color3.new(0.9, 0.9, 0.9)
            }):Play()
        end)

        toggleButton.MouseLeave:Connect(function()
            TweenService:Create(toggleButton, TweenInfo.new(0.2), {
                BackgroundTransparency = 1,
                TextColor3 = Color3.new(1, 1, 1)
            }):Play()
        end)

        toggleButton.MouseButton1Down:Connect(function()
            game:GetService("TweenService"):Create(
                toggleButton,
                TweenInfo.new(0.1),
                {Size = UDim2.new(0, 190, 0, 38)}
            ):Play()
        end)

        toggleButton.MouseButton1Up:Connect(function()
            game:GetService("TweenService"):Create(
                toggleButton,
                TweenInfo.new(0.2),
                {Size = UDim2.new(0, 200, 0, 40)}
            ):Play()
        end)

        toggleButton.MouseButton1Click:Connect(function()
            toggleEnabled = not toggleEnabled

            if toggleEnabled then
                toggleButton.Text = onText or "ON"
                if onFunction then onFunction() end
            else
                toggleButton.Text = offText or "OFF"
                if offFunction then offFunction() end
            end
        end)

        toggleButton.Parent = parent
        return toggleButton
    end
end

do -- Tab Switching Block
    local function switchTab(tabName)
        for _, tabInstance in ipairs(tabContainer:GetChildren()) do
            if tabInstance:IsA("TextButton") then
                tabInstance.TextTransparency = 0.5
                local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
                if tabStroke then
                    tabStroke.Transparency = 0.5
                end
            end
        end
        for _, content in ipairs(contentContainer:GetChildren()) do
            if content:IsA("ScrollingFrame") then
                content.Visible = false
            end
        end

        local selectedTab = tabContainer:FindFirstChild(tabName)
        if selectedTab then
            selectedTab.TextTransparency = 0
            local selectedTabStroke = selectedTab:FindFirstChildOfClass("UIStroke")
            if selectedTabStroke then
                selectedTabStroke.Transparency = 0
            end
        end
        local selectedContent = contentContainer:FindFirstChild(tabName.."Content")
        if selectedContent then
            selectedContent.Visible = true
        end
    end
end

do -- UI Toggle Block
    local function toggleUI(visible)
        mainFrame.Visible = visible
        toggleBtn.Visible = not visible
        if visible then
            mainFrame:TweenSize(UDim2.new(0, 700, 0, 380), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.3)
        end
    end

    closeBtn.MouseButton1Click:Connect(function()
        toggleUI(false)
        toggleBtn.Visible = true
    end)

    toggleBtn.MouseButton1Click:Connect(function()
        toggleUI(true)
        toggleBtn.Visible = false
    end)
end


do -- Open Animation Block
    local function openAnimation()
        toggleBtn.Visible = false
        mainFrame.Visible = true
        mainFrame.Size = UDim2.new(0, 700, 0, 2)
        mainFrame.BackgroundTransparency = 1
        titleText.TextTransparency = 1
        closeBtn.TextTransparency = 1
        topSeparator.Transparency = 1
        verticalSeparator.Transparency = 1

        for _, tabInstance in ipairs(tabContainer:GetChildren()) do
            if tabInstance:IsA("TextButton") then
                tabInstance.TextTransparency = 1
                local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
                if tabStroke then
                    tabStroke.Transparency = 1
                end
            end
        end

        mainFrame:TweenSize(UDim2.new(0, 700, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.5, true, function()
            mainFrame:TweenSize(UDim2.new(0, 700, 0, 380), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.7)
            for i = 1, 0, -0.05 do
                mainFrame.BackgroundTransparency = i * 0.2
                titleText.TextTransparency = i
                closeBtn.TextTransparency = i
                topSeparator.Transparency = i
                verticalSeparator.Transparency = i
                for _, tabInstance in ipairs(tabContainer:GetChildren()) do
                    if tabInstance:IsA("TextButton") then
                        tabInstance.TextTransparency = i
                        local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
                        if tabStroke then
                            tabStroke.Transparency = i
                        end
                    end
                end
                task.wait(0.03)
            end
            switchTab("MAIN FEATURES")
        end)
    end
end

do -- Tab Connections Block
    mainTab.MouseButton1Click:Connect(function() switchTab("MAIN FEATURES") end)
    espTab.MouseButton1Click:Connect(function() switchTab("ESP") end)
    miscTab.MouseButton1Click:Connect(function() switchTab("MISC") end)
end

do -- ESP Functionality Block
    local espEnabled = false
    local espInstances = {}
    local lockTimeEspEnabled = false
    local lockTimeEspInstances = {}

    local function createPlayerESP(playerToESP)
        if not espEnabled or playerToESP == LocalPlayer then return end

        local character = playerToESP.Character or playerToESP.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 10)
        if not humanoidRootPart then return end

        local billboard = Instance.new("BillboardGui")
        billboard.Name = "PlayerESP_" .. playerToESP.Name
        billboard.AlwaysOnTop = true
        billboard.Size = UDim2.new(0, 250, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.Adornee = humanoidRootPart
        billboard.Parent = humanoidRootPart

        local textLabel = Instance.new("TextLabel")
        textLabel.Name = "NameLabel"
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = playerToESP.DisplayName
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        textLabel.TextStrokeTransparency = 0
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.GothamBold
        textLabel.Parent = billboard

        espInstances[playerToESP] = billboard

        local function onCharacterAdded(newCharacter)
            if billboard and billboard.Parent then
                billboard:Destroy()
            end
            if espEnabled then
                createPlayerESP(playerToESP)
            end
        end
        playerToESP.CharacterAdded:Connect(onCharacterAdded)
    end
end
do -- ESP Removal Block
    local function removePlayerESP(playerToESP)
        local espInstance = espInstances[playerToESP]
        if espInstance and espInstance.Parent then
            espInstance:Destroy()
        end
        espInstances[playerToESP] = nil
    end

    local function togglePlayerESP(enable)
        espEnabled = enable
        if enable then
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    task.spawn(function()
                        createPlayerESP(player)
                    end)
                end
            end
        else
            for player, espInstance in pairs(espInstances) do
                if espInstance and espInstance.Parent then
                    espInstance:Destroy()
                end
            end
            espInstances = {}
        end
    end
end

do -- Lock Time ESP Block
    local function updateLockTimeESP()
        if not lockTimeEspEnabled then
            for _, instance in pairs(lockTimeEspInstances) do
                if instance and instance.Parent then
                    instance:Destroy()
                end
            end
            lockTimeEspInstances = {}
            return
        end

        for _, plot in pairs(workspace.Plots:GetChildren()) do
            local timeLabel = plot:FindFirstChild("Purchases", true) and 
                              plot.Purchases:FindFirstChild("PlotBlock", true) and
                              plot.Purchases.PlotBlock.Main:FindFirstChild("BillboardGui", true) and
                              plot.Purchases.PlotBlock.Main.BillboardGui:FindFirstChild("RemainingTime", true)
            
            if timeLabel and timeLabel:IsA("TextLabel") then
                local espName = "LockTimeESP_" .. plot.Name
                local existingBillboard = lockTimeEspInstances[plot.Name]
                
                local isUnlocked = timeLabel.Text == "0s"
                local displayText = isUnlocked and "Unlocked" or ("Lock: " .. timeLabel.Text)
                
                local textColor = isUnlocked and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 0)
                
                if not existingBillboard or not existingBillboard.Parent then
                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = espName
                    billboard.AlwaysOnTop = true
                    billboard.Adornee = plot.Purchases.PlotBlock.Main
                    
                    local label = Instance.new("TextLabel")
                    label.Text = displayText
                    label.Size = UDim2.new(1, 0, 1, 0)
                    label.BackgroundTransparency = 1
                    label.TextScaled = true
                    label.TextColor3 = textColor
                    label.TextStrokeColor3 = Color3.new(0, 0, 0)
                    label.TextStrokeTransparency = 0
                    label.Font = Enum.Font.SourceSansBold
                    
                    label.Parent = billboard
                    billboard.Parent = plot
                    lockTimeEspInstances[plot.Name] = billboard
                else
                    existingBillboard.TextLabel.Text = displayText
                    existingBillboard.TextLabel.TextColor3 = textColor
                end
                existingBillboard.Size = UDim2.new(0, 100, 0, 20)
                existingBillboard.StudsOffset = Vector3.new(0, 2, 0) 
            end
        end
    end

    local function toggleLockTimeESP(enable)
        lockTimeEspEnabled = enable
        if enable then
            updateLockTimeESP()
            RunService.Heartbeat:Connect(updateLockTimeESP)
        else
            for _, instance in pairs(lockTimeEspInstances) do
                if instance and instance.Parent then
                    instance:Destroy()
                end
            end
            lockTimeEspInstances = {}
        end
    end
end

do -- ESP UI Toggles Block
    espContent.AutomaticCanvasSize = Enum.AutomaticSize.Y

    createToggle(espContent, "Toggle Player ESP", "Player ESP: ON", "Player ESP: OFF", 
        function() togglePlayerESP(true) end, 
        function() togglePlayerESP(false) end
    )

    createToggle(espContent, "Toggle Lock Time ESP", "Lock Time ESP: ON", "Lock Time ESP: OFF", 
        function() toggleLockTimeESP(true) end, 
        function() toggleLockTimeESP(false) end
    )
end

do -- Anti-Cheat Bypass Block
    local scanned = {}
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")

    local function hookRemote(remote)
        if remote:IsA("RemoteEvent") then
            local oldFire
            oldFire = hookfunction(remote.FireServer, function(self, ...)
                local args = {...}
                if args[1] and (tostring(args[1]):lower() == "x-15" or tostring(args[1]) == "X-15") or (tostring(args[1]):lower() == "x-16" or tostring(args[1]) == "X-16") then
                    return task.wait(9e9)
                end
                return oldFire(self, unpack(args))
            end)
        end
    end

    local function isRemote(obj)
        return typeof(obj) == "Instance" and obj:IsA("RemoteEvent")
    end

    local function deepScan(value)
        if scanned[value] then return end
        scanned[value] = true
        if isRemote(value) then
            if not value:IsDescendantOf(ReplicatedStorage) then
                hookRemote(value)
                local Old
                Old = hookfunction(getrenv().coroutine.wrap, function(...)
                    if not checkcaller() then
                        return task.wait(9e9)
                    end
                    return Old(...)
                end)
            end
            return
        end
        if typeof(value) == "function" then
            local upvalues = getupvalues(value)
            for i, v in pairs(upvalues) do
                deepScan(v)
            end
        end
        if typeof(value) == "table" then
            for k, v in pairs(value) do
                deepScan(v)
            end
        end
    end

    for _, obj in next, getgc(true) do
        if typeof(obj) == "function" and islclosure(obj) and not isexecutorclosure(obj) then
            deepScan(obj)
        end
    end
end

do -- Auto Steal Block
    local autosteal = false
    createToggle(mainContent, "Toggle Auto Steal", "Auto Steal: ON", "Auto Steal: OFF",
        function() 
            autosteal = true
            task.spawn(function()
                while autosteal do
                    task.wait(2.5)
                    local foundSteal = false
                    if ReplicatedStorage.Packages.Net:FindFirstChild("RE/StealService/DeliverySteal") then
                        ReplicatedStorage.Packages.Net["RE/StealService/DeliverySteal"]:FireServer()
                        foundSteal = true
                    elseif ReplicatedStorage.Packages.Net:FindFirstChild("RE/3891348e-5b69-47f3-af95-20012defb3fe") then
                        ReplicatedStorage.Packages.Net["RE/3891348e-5b69-47f3-af95-20012defb3fe"]:FireServer("e280cd99-2836-4a9c-8b9e-59e5750aab98")
                        foundSteal = true
                    end
                end
            end)
        end,
        function() autosteal = false end
    )
end

do -- Proximity Prompts Block
    local ipp = false
    local pp = {}

    local function dop(p)
        if p.Base.Spawn.PromptAttachment:FindFirstChild("ProximityPrompt") then
            local c = p.Base.Spawn.PromptAttachment.ProximityPrompt
            table.insert(pp,c)
            if ipp then
                c.HoldDuration = 0
                c:GetPropertyChangedSignal("HoldDuration"):Connect(function()
                    if c.HoldDuration ~= 0 and ipp then
                        c.HoldDuration = 0
                    end
                end)
            end
        end
        p.Base.Spawn.PromptAttachment.ChildAdded:Connect(function(c)
            if c:IsA("ProximityPrompt") then
                table.insert(pp,c)
                if ipp then
                    c.HoldDuration = 0
                end
                c:GetPropertyChangedSignal("HoldDuration"):Connect(function()
                    if c.HoldDuration ~= 0 and ipp then
                        c.HoldDuration = 0
                    end
                end)
            end
        end)
    end

    for _,v in pairs(workspace.Plots:GetChildren()) do
        if v:FindFirstChild("AnimalPodiums") then
            for _,v2 in pairs(v.AnimalPodiums:GetChildren()) do
                dop(v2)
            end
            v.AnimalPodiums.ChildAdded:Connect(dop)
        end
    end

    createToggle(mainContent, "Instant Proximity Prompts", "Instant PP: ON", "Instant PP: OFF",
        function() 
            ipp = true
            for _,v in pairs(pp) do
                v.HoldDuration = 0
            end
        end,
        function() ipp = false end
    )
end

do -- Anti Ragdoll Block
    local antiragdoll = false
    createToggle(miscContent, "Anti Ragdoll/Freeze", "Anti Ragdoll: ON", "Anti Ragdoll: OFF",
        function() 
            antiragdoll = true
            local function doTool(tool)
                if tool:IsA("BasePart") then
                    tool:GetPropertyChangedSignal("Anchored"):Connect(function()
                        if tool.Anchored and antiragdoll then
                            tool.Anchored = false
                        end
                    end)
                    tool.ChildAdded:Connect(function(c)
                        if c and (c:IsA("BallSocketConstraint") or c.Name == "Attachment" or c:IsA("HingeConstraint")) and c and c.Parent then
                            c:Destroy()
                            LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                            LocalPlayer.Character.Humanoid.PlatformStand = false
                            workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
                            LocalPlayer.Character.HumanoidRootPart.CanCollide = true
                            if tool:FindFirstChildWhichIsA("Motor6D") then
                                tool:FindFirstChildWhichIsA("Motor6D").Enabled = true
                            end
                            pcall(function()
                                require(game:GetService("Players").LocalPlayer.PlayerScripts.PlayerModule.ControlModule):Enable()
                            end)
                            for i=1,10 do
                                task.wait()
                                tool.Velocity = Vector3.new(0,0,0)
                            end
                        end
                    end)
                elseif tool:IsA("Humanoid") then
                    tool.StateChanged:Connect(function()
                        if antiragdoll and (tool:GetState() == Enum.HumanoidStateType.Physics or tool:GetState() == Enum.HumanoidStateType.Ragdoll) then
                            tool:ChangeState(Enum.HumanoidStateType.GettingUp)
                        end
                    end)
                end
            end
            local function doChar(c)
                c.ChildAdded:Connect(function(v)
                    doTool(v)
                end)
                for _,v in pairs(c:GetChildren()) do
                    doTool(v)
                end
            end
            LocalPlayer.CharacterAdded:Connect(doChar)
            if LocalPlayer.Character then
                doChar(LocalPlayer.Character)
            end
        end,
        function() antiragdoll = false end
    )
end

do -- Speed Boost Block
    local currentSpeed = 0
    local speedBoostEnabled = false
    local speedConnection

    local function setSpeed(speed)
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 16 + speed
        end
    end

    createToggle(miscContent, "Speed Boost (20)", "Speed Boost: ON", "Speed Boost: OFF",
        function() 
            speedBoostEnabled = true
            currentSpeed = 20
            setSpeed(currentSpeed)
            speedConnection = LocalPlayer.CharacterAdded:Connect(function(char)
                char:WaitForChild("Humanoid").WalkSpeed = 16 + currentSpeed
            end)
        end,
        function() 
            speedBoostEnabled = false
            currentSpeed = 0
            setSpeed(currentSpeed)
            if speedConnection then
                speedConnection:Disconnect()
                speedConnection = nil
            end
        end
    )
end

do -- Money Collection Block
    local collectingMoney = false
    createToggle(mainContent, "Auto Collect Money", "Auto Collect: ON", "Auto Collect: OFF",
        function() 
            collectingMoney = true
            task.spawn(function()
                while collectingMoney do
                    for i = 1, 16 do
                        if ReplicatedStorage.Packages.Net:FindFirstChild("RE/PlotService/ClaimCoins") then
                            ReplicatedStorage.Packages.Net["RE/PlotService/ClaimCoins"]:FireServer(i)
                        end
                        task.wait(0.2)
                    end
                end
            end)
        end,
        function() collectingMoney = false end
    )
end

do -- Noclip Camera Block
    createButton(miscContent, "Noclip Camera", function()
        local sc = (debug and debug.setconstant) or setconstant
        local gc = (debug and debug.getconstants) or getconstants
        if not sc or not getgc or not gc then
            return
        end
        local pop = LocalPlayer.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper
        for _, v in pairs(getgc()) do
            if typeof(v) == "function" and getfenv(v).script == pop then
                for i, v1 in pairs(gc(v)) do
                    if tonumber(v1) == .25 then
                        sc(v, i, 0)
                    elseif tonumber(v1) == 0 then
                        sc(v, i, .25)
                    end
                end
            end
        end
    end)
end

do -- Teleport Functions Block
    createButton(mainContent, "Steal (Teleport to Middle)", function()
        local pos = CFrame.new(0, -500, 0)
        local startT = os.clock()
        while os.clock() - startT < 1 do
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = pos
            end
            task.wait()
        end
    end)

    createButton(mainContent, "Teleport to Base", function()
        local base = nil
        for _, v in pairs(workspace:WaitForChild("Plots"):GetChildren()) do
            local yourBase = v:FindFirstChild("YourBase", true)
            if yourBase and yourBase.Enabled then
                base = v:FindFirstChild("DeliveryHitbox", true)
                break
            end
        end

        if base and LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = LocalPlayer.Character.HumanoidRootPart
            local plrpos = hrp.Position
            local tppos = Vector3.new(base.Position.X, plrpos.Y, base.Position.Z)
            hrp.CFrame = CFrame.new(tppos)
        end
    end)

    createButton(mainContent, "Tween To Base", function()
        local base = nil
        for _, v in pairs(workspace:WaitForChild("Plots"):GetChildren()) do
            local yourBase = v:FindFirstChild("YourBase", true)
            if yourBase and yourBase.Enabled then
                base = v:FindFirstChild("DeliveryHitbox", true)
                break
            end
        end

        if base and LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("Humanoid") then
            local hrp = LocalPlayer.Character.HumanoidRootPart
            local humanoid = LocalPlayer.Character.Humanoid
            local plrpos = hrp.Position
            local tppos = Vector3.new(base.Position.X, plrpos.Y, base.Position.Z)

            local tweenInfo = TweenInfo.new(
                (tppos - plrpos).Magnitude / humanoid.WalkSpeed,
                Enum.EasingStyle.Linear,
                Enum.EasingDirection.Out
            )

            local tween = TweenService:Create(hrp, tweenInfo, {
                CFrame = CFrame.new(tppos) * (hrp.CFrame - plrpos),
                Velocity = Vector3.new(0, 0, 0)
            })

            tween:Play()
        end
    end)
end

do -- Shop System Block
    local allItems = {
        {Name = "Slap", ID = "Basic Slap"},
        {Name = "Iron Slap", ID = "Iron Slap"},
        {Name = "Gold Slap", ID = "Gold Slap"},
        {Name = "Diamond Slap", ID = "Diamond Slap"},
        {Name = "Emerald Slap", ID = "Emerald Slap"},
        {Name = "Ruby Slap", ID = "Ruby Slap"},
        {Name = "Dark Matter Slap", ID = "Dark Matter Slap"},
        {Name = "Flame Slap", ID = "Flame Slap"},
        {Name = "Nuclear Slap", ID = "Nuclear Slap"},
        {Name = "Galaxy Slap", ID = "Galaxy Slap"},
        {Name = "Trap", ID = "Trap"},
        {Name = "Bee Launcher", ID = "Bee Launcher"},
        {Name = "Rage Table", ID = "Rage Table"},
        {Name = "Grapple Hook", ID = "Grapple Hook"},
        {Name = "Taser Gun", ID = "Taser Gun"},
        {Name = "Boogie Bomb", ID = "Boogie Bomb"},
        {Name = "Medusa's Head", ID = "Medusa's Head"},
        {Name = "Web Slinger", ID = "Web Slinger"},
        {Name = "Quantum Cloner", ID = "Quantum Cloner"},
        {Name = "All Seeing Sentry", ID = "All Seeing Sentry"},
        {Name = "Laser Cape", ID = "Laser Cape"},
        {Name = "Speed Coil", ID = "Speed Coil"},
        {Name = "Gravity Coil", ID = "Gravity Coil"},
        {Name = "Coil Combo", ID = "Coil Combo"},
        {Name = "Invisibility Cloak", ID = "Invisibility Cloak"}
    }

    addCategory(mainContent, "Shop Items")

    createButton(mainContent, "Buy Speed Coil", function()
        local success, err = pcall(function()
            ReplicatedStorage
                :WaitForChild("Packages")
                :WaitForChild("Net")
                :WaitForChild("RF/CoinsShopService/RequestBuy")
                :InvokeServer("Speed Coil")
        end)
    end)

    createButton(mainContent, "Buy Invisibility Cloak", function()
        local success, err = pcall(function()
            ReplicatedStorage
                :WaitForChild("Packages")
                :WaitForChild("Net")
                :WaitForChild("RF/CoinsShopService/RequestBuy")
                :InvokeServer("Invisibility Cloak")
        end)
    end)
end

do -- Final Connections Block
    Players.PlayerAdded:Connect(function(player)
        if espEnabled then
            task.spawn(function()
                createPlayerESP(player)
            end)
        end
    end)

    script.Parent.AncestryChanged:Connect(function()
        if not script.Parent then
            for player, espInstance in pairs(espInstances) do
                if espInstance and espInstance.Parent then
                    espInstance:Destroy()
                end
            end
            espInstances = {}
            for _, instance in pairs(lockTimeEspInstances) do
                if instance and instance.Parent then
                    instance:Destroy()
                end
            end
            lockTimeEspInstances = {}
        end
    end)

    openAnimation()
end
