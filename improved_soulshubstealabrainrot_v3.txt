local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

if game:GetService("CoreGui"):FindFirstChild("SOULS_HUB") then
    game:GetService("CoreGui").SOULS_HUB:Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SOULS_HUB"
screenGui.Parent = game:GetService("CoreGui")

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 700, 0, 380)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.ZIndex = 1
mainFrame.Visible = false
mainFrame.Parent = screenGui

local outline = Instance.new("UIStroke")
outline.Color = Color3.new(1, 1, 1)
outline.Thickness = 2
outline.Transparency = 0.1
outline.Parent = mainFrame

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 16)
corner.Parent = mainFrame

local gradient = Instance.new("UIGradient")
gradient.Rotation = 90
gradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0.6),
    NumberSequenceKeypoint.new(1, 0.8)
})
gradient.Parent = mainFrame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleButton"
toggleBtn.Size = UDim2.new(0, 140, 0, 40)
toggleBtn.Position = UDim2.new(0.5, -70, 0, 20)
toggleBtn.AnchorPoint = Vector2.new(0.5, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleBtn.BackgroundTransparency = 0.3
toggleBtn.Text = "TOGGLE MENU"
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 14
toggleBtn.Visible = false
toggleBtn.ZIndex = 10
toggleBtn.Parent = screenGui

local toggleTextOutline = Instance.new("UIStroke")
toggleTextOutline.Color = Color3.new(0, 0, 0)
toggleTextOutline.Thickness = 1
toggleTextOutline.Transparency = 0
toggleTextOutline.Parent = toggleBtn

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 12)
toggleCorner.Parent = toggleBtn

local toggleOutline = Instance.new("UIStroke")
toggleOutline.Color = Color3.new(1, 1, 1)
toggleOutline.Thickness = 1
toggleOutline.Transparency = 0.2
toggleOutline.Parent = toggleBtn

local function makeDraggable(frame)
    local dragging = false
    local dragInput, dragStart, startPos

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)

    frame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
            dragInput = nil
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            dragInput = input
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end
makeDraggable(mainFrame)
makeDraggable(toggleBtn)

local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseButton"
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 10)
closeBtn.AnchorPoint = Vector2.new(1, 0)
closeBtn.BackgroundTransparency = 1
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextSize = 20
closeBtn.Font = Enum.Font.GothamBold
closeBtn.ZIndex = 3
closeBtn.Parent = mainFrame

local closeTextOutline = Instance.new("UIStroke")
closeTextOutline.Color = Color3.new(0, 0, 0)
closeTextOutline.Thickness = 1
closeTextOutline.Transparency = 0
closeTextOutline.Parent = closeBtn

local titleFont = Enum.Font.GothamBold
local titleText = Instance.new("TextLabel")
titleText.Name = "Title"
titleText.Size = UDim2.new(0, 200, 0, 30)
titleText.Position = UDim2.new(0, 20, 0, 10)
titleText.BackgroundTransparency = 1
titleText.Text = "SOULS HUB"
titleText.TextColor3 = Color3.new(1, 1, 1)
titleText.TextSize = 24
titleText.Font = titleFont
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.ZIndex = 2
titleText.Parent = mainFrame

local titleTextOutline = Instance.new("UIStroke")
titleTextOutline.Color = Color3.new(0, 0, 0)
titleTextOutline.Thickness = 1
titleTextOutline.Transparency = 0
titleTextOutline.Parent = titleText

local titleGlow = Instance.new("UIGradient")
titleGlow.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
    ColorSequenceKeypoint.new(0.5, Color3.new(0.85, 0.85, 0.85)),
    ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
})
titleGlow.Rotation = -45
titleGlow.Transparency = NumberSequence.new(0.6)
titleGlow.Parent = titleText

local topSeparator = Instance.new("Frame")
topSeparator.Name = "TopSeparator"
topSeparator.Size = UDim2.new(1, -40, 0, 1)
topSeparator.Position = UDim2.new(0, 20, 0, 50)
topSeparator.BackgroundColor3 = Color3.new(1, 1, 1)
topSeparator.BorderSizePixel = 0
topSeparator.ZIndex = 2
topSeparator.Parent = mainFrame

local verticalSeparator = Instance.new("Frame")
verticalSeparator.Name = "VerticalSeparator"
verticalSeparator.Size = UDim2.new(0, 1, 1, -120)
verticalSeparator.Position = UDim2.new(0, 170, 0, 70)
verticalSeparator.BackgroundColor3 = Color3.new(1, 1, 1)
verticalSeparator.BorderSizePixel = 0
verticalSeparator.ZIndex = 2
verticalSeparator.Parent = mainFrame

local tabContainer = Instance.new("Frame")
tabContainer.Name = "Tabs"
tabContainer.Size = UDim2.new(0, 150, 0, 280)
tabContainer.Position = UDim2.new(0, 15, 0, 70)
tabContainer.BackgroundTransparency = 1
tabContainer.ZIndex = 2
tabContainer.Parent = mainFrame

local contentContainer = Instance.new("Frame")
contentContainer.Name = "Content"
contentContainer.Size = UDim2.new(0, 500, 0, 280)
contentContainer.Position = UDim2.new(1, -515, 0, 70)
contentContainer.BackgroundTransparency = 1
contentContainer.ZIndex = 2
contentContainer.Parent = mainFrame

local function createTab(tabName)
    local tab = Instance.new("TextButton")
    tab.Name = tabName
    tab.Size = UDim2.new(0, 140, 0, 30)
    tab.Position = UDim2.new(0, 0, 0, #tabContainer:GetChildren() * 35)
    tab.BackgroundTransparency = 1
    tab.Text = tabName
    tab.TextColor3 = Color3.new(1, 1, 1)
    tab.TextSize = 18
    tab.Font = Enum.Font.GothamBold
    tab.TextTransparency = 0.5
    tab.ZIndex = 3

    local tabTextOutline = Instance.new("UIStroke")
    tabTextOutline.Color = Color3.new(0, 0, 0)
    tabTextOutline.Thickness = 1
    tabTextOutline.Transparency = 0.5
    tabTextOutline.Parent = tab

    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.5
    outline.Parent = tab

    local content = Instance.new("ScrollingFrame")
    content.Name = tabName.."Content"
    content.Size = UDim2.new(1, 0, 1, 0)
    content.BackgroundTransparency = 1
    content.Visible = false
    content.ScrollBarThickness = 5
    content.AutomaticCanvasSize = Enum.AutomaticSize.Y
    content.Parent = contentContainer

    tab.MouseButton1Click:Connect(function()
        switchTab(tabName)
    end)

    tab.Parent = tabContainer
    return tab, content
end

local mainTab, mainContent = createTab("MAIN FEATURES")
local espTab, espContent = createTab("ESP")
local miscTab, miscContent = createTab("MISC")

local function addCategory(parent, text)
    local category = Instance.new("TextLabel")
    category.Name = text.."Category"
    category.Size = UDim2.new(0, 200, 0, 20)
    category.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    category.BackgroundTransparency = 1
    category.Text = text
    category.TextColor3 = Color3.new(1, 1, 1)
    category.TextSize = 16
    category.Font = titleFont
    category.TextXAlignment = Enum.TextXAlignment.Left
    category.ZIndex = 3

    local categoryTextOutline = Instance.new("UIStroke")
    categoryTextOutline.Color = Color3.new(0, 0, 0)
    categoryTextOutline.Thickness = 1
    categoryTextOutline.Transparency = 0
    categoryTextOutline.Parent = category

    category.Parent = parent
end

local function createButton(parent, buttonText, func)
    local button = Instance.new("TextButton")
    button.Name = buttonText
    button.Size = UDim2.new(0, 200, 0, 40)
    button.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    button.BackgroundTransparency = 1
    button.Text = buttonText
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 14
    button.ZIndex = 3

    local buttonTextOutline = Instance.new("UIStroke")
    buttonTextOutline.Color = Color3.new(0, 0, 0)
    buttonTextOutline.Thickness = 1
    buttonTextOutline.Transparency = 0.3
    buttonTextOutline.Parent = button

    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.3
    outline.Parent = button

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button

    button.MouseButton1Click:Connect(function()
        if func then func() end
    end)

    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.85,
            TextColor3 = Color3.new(0.9, 0.9, 0.9)
        }):Play()
    end)

    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundTransparency = 1,
            TextColor3 = Color3.new(1, 1, 1)
        }):Play()
    end)

    button.Parent = parent
    return button
end

local function createToggle(parent, defaultText, onText, offText, onFunction, offFunction)
    local toggleEnabled = false
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 200, 0, 40)
    toggleButton.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Text = defaultText or "TOGGLE"
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.TextSize = 14
    toggleButton.ZIndex = 3

    local toggleTextOutline = Instance.new("UIStroke")
    toggleTextOutline.Color = Color3.new(0, 0, 0)
    toggleTextOutline.Thickness = 1
    toggleTextOutline.Transparency = 0.3
    toggleTextOutline.Parent = toggleButton

    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.3
    outline.Parent = toggleButton

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = toggleButton

    toggleButton.MouseEnter:Connect(function()
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.85,
            TextColor3 = Color3.new(0.9, 0.9, 0.9)
        }):Play()
    end)

    toggleButton.MouseLeave:Connect(function()
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {
            BackgroundTransparency = 1,
            TextColor3 = Color3.new(1, 1, 1)
        }):Play()
    end)

    toggleButton.MouseButton1Down:Connect(function()
        game:GetService("TweenService"):Create(
            toggleButton,
            TweenInfo.new(0.1),
            {Size = UDim2.new(0, 190, 0, 38)}
        ):Play()
    end)

    toggleButton.MouseButton1Up:Connect(function()
        game:GetService("TweenService"):Create(
            toggleButton,
            TweenInfo.new(0.2),
            {Size = UDim2.new(0, 200, 0, 40)}
        ):Play()
    end)

    toggleButton.MouseButton1Click:Connect(function()
        toggleEnabled = not toggleEnabled

        if toggleEnabled then
            toggleButton.Text = onText or "ON"
            if onFunction then onFunction() end
        else
            toggleButton.Text = offText or "OFF"
            if offFunction then offFunction() end
        end
    end)

    toggleButton.Parent = parent
    return toggleButton
end

local function switchTab(tabName)
    for _, tabInstance in ipairs(tabContainer:GetChildren()) do
        if tabInstance:IsA("TextButton") then
            tabInstance.TextTransparency = 0.5
            local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
            if tabStroke then
                tabStroke.Transparency = 0.5
            end
        end
    end
    for _, content in ipairs(contentContainer:GetChildren()) do
        if content:IsA("ScrollingFrame") then
            content.Visible = false
        end
    end

    local selectedTab = tabContainer:FindFirstChild(tabName)
    if selectedTab then
        selectedTab.TextTransparency = 0
        local selectedTabStroke = selectedTab:FindFirstChildOfClass("UIStroke")
        if selectedTabStroke then
            selectedTabStroke.Transparency = 0
        end
    end
    local selectedContent = contentContainer:FindFirstChild(tabName.."Content")
    if selectedContent then
        selectedContent.Visible = true
    end
end

local function toggleUI(visible)
    mainFrame.Visible = visible
    toggleBtn.Visible = not visible
    if visible then
        mainFrame:TweenSize(UDim2.new(0, 700, 0, 380), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.3)
    end
end

closeBtn.MouseButton1Click:Connect(function()
    toggleUI(false)
    toggleBtn.Visible = true
end)

toggleBtn.MouseButton1Click:Connect(function()
    toggleUI(true)
    toggleBtn.Visible = false
end)

local function openAnimation()
    toggleBtn.Visible = false
    mainFrame.Visible = true
    mainFrame.Size = UDim2.new(0, 700, 0, 2)
    mainFrame.BackgroundTransparency = 1
    titleText.TextTransparency = 1
    closeBtn.TextTransparency = 1
    topSeparator.Transparency = 1
    verticalSeparator.Transparency = 1

    for _, tabInstance in ipairs(tabContainer:GetChildren()) do
        if tabInstance:IsA("TextButton") then
            tabInstance.TextTransparency = 1
            local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
            if tabStroke then
                tabStroke.Transparency = 1
            end
        end
    end

    mainFrame:TweenSize(UDim2.new(0, 700, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.5, true, function()
        mainFrame:TweenSize(UDim2.new(0, 700, 0, 380), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.7)
        for i = 1, 0, -0.05 do
            mainFrame.BackgroundTransparency = i * 0.2
            titleText.TextTransparency = i
            closeBtn.TextTransparency = i
            topSeparator.Transparency = i
            verticalSeparator.Transparency = i
            for _, tabInstance in ipairs(tabContainer:GetChildren()) do
                if tabInstance:IsA("TextButton") then
                    tabInstance.TextTransparency = i
                    local tabStroke = tabInstance:FindFirstChildOfClass("UIStroke")
                    if tabStroke then
                        tabStroke.Transparency = i
                    end
                end
            end
            task.wait(0.03)
        end
        switchTab("MAIN FEATURES")
    end)
end


mainTab.MouseButton1Click:Connect(function() switchTab("MAIN FEATURES") end)
espTab.MouseButton1Click:Connect(function() switchTab("ESP") end)
miscTab.MouseButton1Click:Connect(function() switchTab("MISC") end)


openAnimation()

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "SOULS HUB",
    Text = "Script Loaded!",
    Duration = 5
})

-- Anti-cheat bypasses (from reference files)
local scanned = {}
local function hookRemote(remote)
    if remote:IsA("RemoteEvent") then
        local oldFire
        oldFire = hookfunction(remote.FireServer, function(self, ...)
            local args = {...}
            -- Example bypass for specific remote calls (adjust as needed)
            if args[1] and (tostring(args[1]):lower() == "x-15" or tostring(args[1]) == "x-16") then
                return task.wait(9e9) -- Block or delay suspicious calls
            end
            return oldFire(self, unpack(args))
        end)
    end
end

local function isRemote(obj)
    return typeof(obj) == "Instance" and obj:IsA("RemoteEvent")
end

local function deepScan(value)
    if scanned[value] then return end
    scanned[value] = true
    if isRemote(value) then
        -- Only hook remotes not parented to ReplicatedStorage, as per reference
        if not value:IsDescendantOf(ReplicatedStorage) then
            hookRemote(value)
        end
        return
    end
    if typeof(value) == "function" then
        local upvalues = getupvalues(value)
        for i, v in pairs(upvalues) do
            deepScan(v)
        end
    end
    if typeof(value) == "table" then
        for k, v in pairs(value) do
            deepScan(v)
        end
    end
end

-- Scan for and hook suspicious remote events
for _, obj in next, getgc(true) do
    if typeof(obj) == "function" and islclosure(obj) and not isexecutorclosure(obj) then
        deepScan(obj)
    end
end

-- Anti-ragdoll/freeze (from reference files)
local antiRagdollEnabled = false
local function handleCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    if humanoid then
        humanoid.StateChanged:Connect(function(oldState, newState)
            if antiRagdollEnabled and (newState == Enum.HumanoidStateType.Physics or newState == Enum.HumanoidStateType.Ragdoll) then
                humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                humanoid.PlatformStand = false
                workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
                if LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart then
                    LocalPlayer.Character.HumanoidRootPart.CanCollide = true
                end
                pcall(function()
                    require(game:GetService("Players").LocalPlayer.PlayerScripts.PlayerModule.ControlModule):Enable()
                end)
            end
        end)
    end
    for _, child in ipairs(character:GetChildren()) do
        if child:IsA("BasePart") then
            child.ChildAdded:Connect(function(addedChild)
                if antiRagdollEnabled and (addedChild:IsA("BallSocketConstraint") or addedChild.Name == "Attachment" or addedChild:IsA("HingeConstraint")) then
                    addedChild:Destroy()
                    humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                    humanoid.PlatformStand = false
                    workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
                    if LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart then
                        LocalPlayer.Character.HumanoidRootPart.CanCollide = true
                    end
                    pcall(function()
                        require(game:GetService("Players").LocalPlayer.PlayerScripts.PlayerModule.ControlModule):Enable()
                    end)
                end
            end)
        end
    end
end

LocalPlayer.CharacterAdded:Connect(handleCharacterAdded)
if LocalPlayer.Character then
    handleCharacterAdded(LocalPlayer.Character)
end

-- Auto Collect Money (from reference files)
local collecting = false
local function toggleAutoCollect()
    collecting = not collecting
    if collecting then
        task.spawn(function()
            while collecting do
                for i = 1, 16 do
                    if ReplicatedStorage.Packages.Net:FindFirstChild("RE/PlotService/ClaimCoins") then
                        ReplicatedStorage.Packages.Net["RE/PlotService/ClaimCoins"]:FireServer(i)
                    end
                    task.wait(0.2)
                end
            end
        end)
    end
end

-- Steal Pets (from reference files)
local autoStealEnabled = false
local function enableAutoSteal(bool)
    autoStealEnabled = bool
end

local function onChildAdded(c)
    if c:IsA("Model") and c:FindFirstChild("RootPart") and c.RootPart:FindFirstChildWhichIsA("WeldConstraint") and c.RootPart:FindFirstChildWhichIsA("WeldConstraint").Part0 == LocalPlayer.Character.HumanoidRootPart then
        task.wait(2.5)
        if c.Parent == workspace and autoStealEnabled then
            if ReplicatedStorage.Packages.Net:FindFirstChild("RE/StealService/DeliverySteal") then
                ReplicatedStorage.Packages.Net["RE/StealService/DeliverySteal"]:FireServer()
            elseif ReplicatedStorage.Packages.Net:FindFirstChild("RE/3891348e-5b69-47f3-af95-20012defb3fe") then
                ReplicatedStorage.Packages.Net["RE/3891348e-5b69-47f3-af95-20012defb3fe"]:FireServer("e280cd99-2836-4a9c-8b9e-59e5750aab98")
            else
                warn("Steal remote not found!")
            end
        end
    end
end

workspace.ChildAdded:Connect(onChildAdded)

-- Spam Tools (from reference files)
local spamToolsEnabled = false
local donetools = {}
local function dotool(tool)
    if tool:IsA("Tool") and not donetools[tool] then
        donetools[tool] = true
        task.spawn(function()
            while spamToolsEnabled do
                task.wait()
                pcall(function()
                    if spamToolsEnabled and (tool.Parent == LocalPlayer.Character or tool.Parent == LocalPlayer.Backpack) then
                        tool.Parent = LocalPlayer.Character
                        tool:Activate()
                    end
                end)
            end
        end)
    end
end

local function dochar(char)
    char.ChildAdded:Connect(function(v)
        dotool(v)
    end)
    for _, v in pairs(char:GetChildren()) do
        dotool(v)
    end
end

LocalPlayer.CharacterAdded:Connect(dochar)
if LocalPlayer.Character then
    dochar(LocalPlayer.Character)
end

-- Invisible (from reference files)
local function makeInvisible()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local cloak = character:FindFirstChild("Invisibility Cloak")
    if cloak and cloak:GetAttribute("SpeedModifier") == 2 then
        cloak.Parent = workspace
    else
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "SOULS HUB",
            Text = "Use Invisibility Cloak First",
            Duration = 3
        })
    end
end

-- Force Reset (standard Roblox reset)
local function forceReset()
    LocalPlayer.Character:BreakJoints()
end

-- ESP (from reference files)
local espEnabled = false
local espInstances = {}
local lineEspEnabled = false

local RaritySettings = {
    ["Legendary"] = { Color = Color3.new(1, 1, 0), Size = UDim2.new(0, 150, 0, 50) },
    ["Mythic"] = { Color = Color3.new(1, 0, 0), Size = UDim2.new(0, 150, 0, 50) },
    ["Brainrot God"] = { Color = Color3.new(0.5, 0, 0.5), Size = UDim2.new(0, 180, 0, 60) },
    ["Secret"] = { Color = Color3.new(0, 0, 0), Size = UDim2.new(0, 200, 0, 70) }
}

local MutationSettings = {
    ["Gold"] = { Color = Color3.fromRGB(255, 215, 0), Size = UDim2.new(0, 120, 0, 30) },
    ["Diamond"] = { Color = Color3.fromRGB(0, 191, 255), Size = UDim2.new(0, 120, 0, 30) },
    ["Rainbow"] = { Color = Color3.fromRGB(255, 192, 203), Size = UDim2.new(0, 120, 0, 30) },
    ["Bloodrot"] = { Color = Color3.fromRGB(139, 0, 0), Size = UDim2.new(0, 120, 0, 30) }
}

local activeESP = {}
local activeLockTimeEsp = false
local lteInstances = {}
local playerLines = {}
local lockTimeLines = {}

local function createLine(fromPart, toPart, color, thickness, parent)
    local line = Instance.new("Part")
    line.Name = "ESP_Line"
    line.Anchored = true
    line.CanCollide = false
    line.Transparency = 0.5
    line.Color = color
    line.FormFactor = Enum.FormFactor.Custom
    line.Size = Vector3.new(thickness, thickness, 1)
    line.Parent = parent or workspace

    local function updateLine()
        if not fromPart or not toPart or not fromPart.Parent or not toPart.Parent then
            line:Destroy()
            return
        end
        local p1 = fromPart.Position
        local p2 = toPart.Position
        local distance = (p1 - p2).Magnitude
        line.Size = Vector3.new(thickness, thickness, distance)
        line.CFrame = CFrame.new(p1:Lerp(p2, 0.5), p2)
    end

    local connection1 = fromPart:GetPropertyChangedSignal("Position"):Connect(updateLine)
    local connection2 = toPart:GetPropertyChangedSignal("Position"):Connect(updateLine)
    local connection3 = fromPart.AncestryChanged:Connect(function() if not fromPart.Parent then line:Destroy() end end)
    local connection4 = toPart.AncestryChanged:Connect(function() if not toPart.Parent then line:Destroy() end end)
    
    updateLine()
    return line, {connection1, connection2, connection3, connection4}
end

local function createPlayerESP(player)
    if not espEnabled then return end
    if player == Players.LocalPlayer then return end
    
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 10)
    if not humanoidRootPart then return end
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_" .. player.Name
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 30)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.Adornee = humanoidRootPart
    billboard.Parent = humanoidRootPart
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "NameLabel"
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = player.DisplayName
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextStrokeTransparency = 0
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.GothamBold
    textLabel.Parent = billboard
    
    espInstances[player] = billboard

    if lineEspEnabled and LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart then
        local line, connections = createLine(LocalPlayer.Character.HumanoidRootPart, humanoidRootPart, Color3.fromRGB(0, 255, 0), 0.2)
        playerLines[player] = {line = line, connections = connections}
    end
    
    local function onCharacterAddedForESP(newCharacter)
        if billboard then billboard:Destroy() end
        if playerLines[player] then
            for _, conn in ipairs(playerLines[player].connections) do conn:Disconnect() end
            playerLines[player].line:Destroy()
            playerLines[player] = nil
        end
        
        humanoidRootPart = newCharacter:WaitForChild("HumanoidRootPart", 10)
        if humanoidRootPart and espEnabled then
            billboard.Adornee = humanoidRootPart
            billboard.Parent = humanoidRootPart
            if lineEspEnabled and LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart then
                local line, connections = createLine(LocalPlayer.Character.HumanoidRootPart, humanoidRootPart, Color3.fromRGB(0, 255, 0), 0.2)
                playerLines[player] = {line = line, connections = connections}
            end
        end
    end
    
    player.CharacterAdded:Connect(onCharacterAddedForESP)
end

local function removePlayerESP(player)
    local espInstance = espInstances[player]
    if espInstance then
        espInstance:Destroy()
        espInstances[player] = nil
    end
    if playerLines[player] then
        for _, conn in ipairs(playerLines[player].connections) do conn:Disconnect() end
        playerLines[player].line:Destroy()
        playerLines[player] = nil
    end
end

local function togglePlayerESP(enable)
    espEnabled = enable
    if enable then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                task.spawn(function()
                    createPlayerESP(player)
                end)
            end
        end
    else
        for player, espInstance in pairs(espInstances) do
            if espInstance then
                espInstance:Destroy()
            end
        end
        espInstances = {}
        for player, lineData in pairs(playerLines) do
            for _, conn in ipairs(lineData.connections) do conn:Disconnect() end
            lineData.line:Destroy()
        end
        playerLines = {}
    end
end

local function initPlayerConnectionsForESP()
    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function(character)
            if player ~= Players.LocalPlayer and espEnabled then
                task.wait(1)
                createPlayerESP(player)
            end
        end)
    end)

    Players.PlayerRemoving:Connect(removePlayerESP)
end

initPlayerConnectionsForESP()

local function updateLockTimeESP()
    if not activeLockTimeEsp then
        for _, instance in pairs(lteInstances) do
            if instance then
                instance:Destroy()
            end
        end
        lteInstances = {}
        for plot, lineData in pairs(lockTimeLines) do
            for _, conn in ipairs(lineData.connections) do conn:Disconnect() end
            lineData.line:Destroy()
        end
        lockTimeLines = {}
        return
    end

    for _, plot in pairs(workspace.Plots:GetChildren()) do
        local timeLabel = plot:FindFirstChild("Purchases", true) and 
        plot.Purchases:FindFirstChild("PlotBlock", true) and
        plot.Purchases.PlotBlock.Main:FindFirstChild("BillboardGui", true) and
        plot.Purchases.PlotBlock.Main.BillboardGui:FindFirstChild("RemainingTime", true)
        
        if timeLabel and timeLabel:IsA("TextLabel") then
            local espName = "LockTimeESP_" .. plot.Name
            local existingBillboard = plot:FindFirstChild(espName)
            
            local isUnlocked = timeLabel.Text == "0s"
            local displayText = isUnlocked and "Unlocked" or ("Lock: " .. timeLabel.Text)
            
            local textColor
            local currentPlotName = ""
            for _, p in ipairs(workspace.Plots:GetChildren()) do
                if p:FindFirstChild("YourBase", true) and p.YourBase.Enabled then
                    currentPlotName = p.Name
                    break
                end
            end

            if plot.Name == currentPlotName then
                textColor = isUnlocked and Color3.fromRGB(0, 255, 0)
                            or Color3.fromRGB(0, 255, 0)
            else
                textColor = isUnlocked and Color3.fromRGB(220, 20, 60)
                            or Color3.fromRGB(255, 255, 0)
            end
            
            if not existingBillboard then
                local billboard = Instance.new("BillboardGui")
                billboard.Name = espName
                billboard.Size = UDim2.new(0, 200, 0, 30)
                billboard.StudsOffset = Vector3.new(0, 5, 0)
                billboard.AlwaysOnTop = true
                billboard.Adornee = plot.Purchases.PlotBlock.Main
                
                local label = Instance.new("TextLabel")
                label.Text = displayText
                label.Size = UDim2.new(1, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.TextScaled = true
                label.TextColor3 = textColor
                label.TextStrokeColor3 = Color3.new(0, 0, 0)
                label.TextStrokeTransparency = 0
                label.Font = Enum.Font.SourceSansBold
                label.Parent = billboard
                
                billboard.Parent = plot
                lteInstances[plot.Name] = billboard

                if lineEspEnabled and LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart then
                    local line, connections = createLine(LocalPlayer.Character.HumanoidRootPart, plot.Purchases.PlotBlock.Main, Color3.fromRGB(255, 0, 255), 0.2)
                    lockTimeLines[plot] = {line = line, connections = connections}
                end
            else
                existingBillboard.TextLabel.Text = displayText
                existingBillboard.TextLabel.TextColor3 = textColor
            end
        end
    end
end

local function updateRarityMutationESP()
    for _, plot in pairs(workspace.Plots:GetChildren()) do
        local currentPlotName = ""
        for _, p in ipairs(workspace.Plots:GetChildren()) do
            if p:FindFirstChild("YourBase", true) and p.YourBase.Enabled then
                currentPlotName = p.Name
                break
            end
        end
        if plot.Name ~= currentPlotName then
            for _, child in pairs(plot:GetDescendants()) do
                if child.Name == "Rarity" and child:IsA("TextLabel") and RaritySettings[child.Text] then
                    local parentModel = child.Parent.Parent
                    local espName = child.Text.."_ESP"
                    local mutationEspName = "Mutation_ESP"
                    local existingBillboard = parentModel:FindFirstChild(espName)
                    local existingMutationBillboard = parentModel:FindFirstChild(mutationEspName)
                    
                    if activeESP[child.Text] then
                        if not existingBillboard then
                            local settings = RaritySettings[child.Text]
                            
                            local billboard = Instance.new("BillboardGui")
                            billboard.Name = espName
                            billboard.Size = settings.Size
                            billboard.StudsOffset = Vector3.new(0, 3, 0)
                            billboard.AlwaysOnTop = true
                            
                            local label = Instance.new("TextLabel")
                            label.Text = child.Parent.DisplayName.Text
                            label.Size = UDim2.new(1, 0, 1, 0)
                            label.BackgroundTransparency = 1
                            label.TextScaled = true
                            label.TextColor3 = settings.Color
                            label.TextStrokeColor3 = Color3.new(0, 0, 0)
                            label.TextStrokeTransparency = 0
                            label.Font = Enum.Font.SourceSansBold
                            
                            label.Parent = billboard
                            billboard.Parent = parentModel
                        end
                        
                        local mutation = child.Parent:FindFirstChild("Mutation")
                        if mutation and mutation:IsA("TextLabel") and MutationSettings[mutation.Text] then
                            local mutationSettings = MutationSettings[mutation.Text]
                            
                            if not existingMutationBillboard then
                                local mutationBillboard = Instance.new("BillboardGui")
                                mutationBillboard.Name = mutationEspName
                                mutationBillboard.Size = mutationSettings.Size
                                mutationBillboard.StudsOffset = Vector3.new(0, 6, 0)
                                mutationBillboard.AlwaysOnTop = true
                                
                                local mutationLabel = Instance.new("TextLabel")
                                mutationLabel.Text = mutation.Text
                                mutationLabel.Size = UDim2.new(1, 0, 1, 0)
                                mutationLabel.BackgroundTransparency = 1
                                mutationLabel.TextScaled = true
                                mutationLabel.TextColor3 = mutationSettings.Color
                                mutationLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                                mutationLabel.TextStrokeTransparency = 0
                                mutationLabel.Font = Enum.Font.SourceSansBold
                                
                                mutationLabel.Parent = mutationBillboard
                                mutationBillboard.Parent = parentModel
                            else
                                existingMutationBillboard.TextLabel.Text = mutation.Text
                                existingMutationBillboard.TextLabel.TextColor3 = mutationSettings.Color
                            end
                        elseif existingMutationBillboard then
                            existingMutationBillboard:Destroy()
                        end
                    else
                        if existingBillboard then
                            existingBillboard:Destroy()
                        end
                        if existingMutationBillboard then
                            existingMutationBillboard:Destroy()
                        end
                    end
                end
            end
        end
    end
end

-- Main Features Tab
addCategory(mainContent, "Farming")
createToggle(mainContent, "Auto Collect Money: OFF", "Auto Collect Money: ON", "Auto Collect Money: OFF", toggleAutoCollect, toggleAutoCollect)
createToggle(mainContent, "Auto Steal Pets: OFF", "Auto Steal Pets: ON", "Auto Steal Pets: OFF", function() enableAutoSteal(true) end, function() enableAutoSteal(false) end)
createToggle(mainContent, "Spam Tools: OFF", "Spam Tools: ON", "Spam Tools: OFF", function() spamToolsEnabled = true end, function() spamToolsEnabled = false end)

addCategory(mainContent, "Movement")
createToggle(mainContent, "Anti Ragdoll/Freeze: OFF", "Anti Ragdoll/Freeze: ON", "Anti Ragdoll/Freeze: OFF", function() antiRagdollEnabled = true end, function() antiRagdollEnabled = false end)
createButton(mainContent, "Invisible", makeInvisible)
createButton(mainContent, "Force Reset", forceReset)

-- ESP Tab
addCategory(espContent, "Player ESP")
createToggle(espContent, "Player ESP: OFF", "Player ESP: ON", "Player ESP: OFF", function() togglePlayerESP(true) end, function() togglePlayerESP(false) end)
createToggle(espContent, "Line ESP: OFF", "Line ESP: ON", "Line ESP: OFF", function()
    lineEspEnabled = true
    togglePlayerESP(espEnabled) -- Re-enable player ESP to redraw lines
    updateLockTimeESP() -- Update lock time ESP to redraw lines
end, function()
    lineEspEnabled = false
    togglePlayerESP(espEnabled) -- Re-enable player ESP to remove lines
    updateLockTimeESP() -- Update lock time ESP to remove lines
end)

addCategory(espContent, "Plot ESP")
createToggle(espContent, "Lock Time ESP: OFF", "Lock Time ESP: ON", "Lock Time ESP: OFF", function() activeLockTimeEsp = true end, function() activeLockTimeEsp = false end)
createToggle(espContent, "Legendary ESP: OFF", "Legendary ESP: ON", "Legendary ESP: OFF", function() activeESP["Legendary"] = true end, function() activeESP["Legendary"] = false end)
createToggle(espContent, "Mythic ESP: OFF", "Mythic ESP: ON", "Mythic ESP: OFF", function() activeESP["Mythic"] = true end, function() activeESP["Mythic"] = false end)
createToggle(espContent, "Brainrot God ESP: OFF", "Brainrot God ESP: ON", "Brainrot God ESP: OFF", function() activeESP["Brainrot God"] = true end, function() activeESP["Brainrot God"] = false end)
createToggle(espContent, "Secret ESP: OFF", "Secret ESP: ON", "Secret ESP: OFF", function() activeESP["Secret"] = true end, function() activeESP["Secret"] = false end)

-- Misc Tab
addCategory(miscContent, "Utilities")
createButton(miscContent, "Noclip Camera", function()
    local sc = (debug and debug.setconstant) or setconstant
    local gc = (debug and debug.getconstants) or getconstants
    if not sc or not getgc or not gc then
        warn("Incompatible Exploit: Your exploit does not support this command (missing setconstant or getconstants or getgc)")
        return
    end
    local pop = LocalPlayer.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper
    for _, v in pairs(getgc()) do
        if type(v) == "function" and getfenv(v).script == pop then
            for i, v1 in pairs(gc(v)) do
                if tonumber(v1) == .25 then
                    sc(v, i, 0)
                elseif tonumber(v1) == 0 then
                    sc(v, i, .25)
                end
            end
        end
    end
end)

-- Update ESPs in a loop
task.spawn(function()
    while true do
        task.wait(0.5) -- Reduced wait time for more responsive ESP
        if activeLockTimeEsp then
            updateLockTimeESP()
        end
        if next(activeESP) ~= nil then
            updateRarityMutationESP()
        end
    end
end)


